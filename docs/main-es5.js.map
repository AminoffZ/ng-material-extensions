{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///dist/cdk-table-exporter/fesm2015/cdk-table-exporter.js","webpack:///dist/mat-table-exporter/fesm2015/mat-table-exporter.js","webpack:///dist/mat-table-filter/fesm2015/mat-table-filter.js","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/add-to-showcase.ts","webpack:///src/app/components/base-component.ts","webpack:///src/app/components/example-viewer/example-viewer.component.html","webpack:///src/app/components/example-viewer/example-viewer.component.ts","webpack:///src/app/components/examples/array-filter/array-filter.component.html","webpack:///src/app/components/examples/array-filter/array-filter.component.ts","webpack:///src/app/components/examples/brief-exporter/brief-exporter.component.html","webpack:///src/app/components/examples/brief-exporter/brief-exporter.component.ts","webpack:///src/app/components/examples/custom-column-filter/custom-column-filter.component.html","webpack:///src/app/components/examples/custom-column-filter/custom-column-filter.component.ts","webpack:///src/app/components/examples/custom-exporter/custom-exporter.component.html","webpack:///src/app/components/examples/custom-exporter/custom-exporter.component.ts","webpack:///src/app/components/examples/property-options/property-options.component.html","webpack:///src/app/components/examples/property-options/property-options.component.ts","webpack:///src/app/components/examples/selection-exporter/selection-exporter.component.html","webpack:///src/app/components/examples/selection-exporter/selection-exporter.component.ts","webpack:///src/app/components/examples/simple-filter/simple-filter.component.html","webpack:///src/app/components/examples/simple-filter/simple-filter.component.ts","webpack:///src/app/components/exporter/exporter.component.html","webpack:///src/app/components/exporter/exporter.component.ts","webpack:///src/app/components/filter/filter.component.html","webpack:///src/app/components/filter/filter.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","CdkTableExporterModule","declarations","imports","ExportType","DataExtractorService","cdkTable","hiddenColumns","outlet","getRowsAsJsonArray","_rowOutlet","renderedRows","getRenderedRows","convertToJsonArray","_getRenderedRows","rows","result","Array","i","length","row","convertRow","push","createExcelItem","cells","children","shouldHide","element","item","innerText","columnIndex","includes","Object","assign","Éµprov","factory","DataExtractorService_Factory","token","providedIn","Mime","extension","contentTypeHeader","MAT_TABLE_EXPORTER","TYPE_ARRAY","CHAR_SET_UTF","CHAR_SET_UTF_8","CONTENT_TYPE_TEXT","TXT","CONTENT_TYPE_APPLICATION","CONTENT_TYPE_EXCEL","DOT","EXTENSION_XLS","XLS","EXTENSION_XLSX","XLSX","EXTENSION_CSV","CSV","EXTENSION_JSON","JSON","EXTENSION_TEXT","MIME_EXCEL_XLS","MIME_EXCEL_XLSX","MIME_JSON","MIME_TXT","MIME_CSV","REF","XLS_REGEX","RETURN","TAB","XLSX_COLS","FileUtil","content","mime","options","blob","Blob","type","fileName","toLowerCase","match","isXls","split","FileExporter","createContent","mimeType","getMimeType","save","WorksheetExporter","workSheet","json_to_sheet","skipHeader","workSheetToContent","CsvExporterService","worksheet","sheet_to_csv","CsvExporterService_Factory","TxtExporterService","forEach","values","join","getDelimiter","delimiter","TxtExporterService_Factory","XlsExporterService","workBook","book_new","columnWidths","convertToWch","correctTypes","book_append_sheet","sheet","bookType","replace","map","width","wch","XlsExporterService_Factory","JsonExporterService","stringify","JsonExporterService_Factory","XlsxExporterService","XlsxExporterService_Factory","ServiceLocatorService","injector","exportType","valueOf","get","OTHER","ctorParameters","ServiceLocatorService_Factory","CdkTableExporter","renderer","serviceLocator","dataExtractor","_cdkTable","exportCompleted","exportStarted","loadExporter","_options","emit","_isIterating","_isExporting","_data","extractTableHeader","exportWithPagination","notPaginated","exportSinglePage","index","paginatedRowIndex","getPaginatedRowIndex","isToggleOn","toggleOff","toggleOn","_selectedRows","filter","x","_a","_exporterService","exporter","getService","_initialPageIndex","getCurrentPageIndex","initPageHandler","goToPage","extractDataOnCurrentPage","extractTableFooter","exportExtractedData","extractRows","concat","getSelectedRows","isSelectiveExport","_","isMasterToggleOff","isMasterToggleOn","compareSelectedRowCount","getTotalItemsCount","rowCount","_subscription","getPageChangeObservable","subscribe","setTimeout","hasNextPage","nextPage","export","extractSpecialRows","_headerRowOutlet","_footerRowOutlet","getPageCount","getPageSize","undefined","prototype","MatTableExporterDirective","table","enablePaginator","getPaginator","getNumberOfPages","_b","pageSize","pageIndex","_c","_d","_e","getDataSource","data","_changePageSize","page","dataSource","paginator","value","disabled","decorators","selector","exportAs","MatTableExporterModule","MatTableFilter","FilterPredicate","itemPair","handleLetterCasing","caseSensitive","filterType","EQUALS","equals","ANYWHERE","anywhere","STARTS_WITH","startsWith","ENDS_WITH","endsWith","transformAllLowerCase","object","key","ArrayPredicateService_1","ArrayPredicateService","example","sort","isSubset","warn","console","UNSUPPORTED_OPERATION_WARNING","SUGGESTION_WARNING","ArrayPredicateService_Factory","AlphaNumericPredicateService","AlphaNumericPredicateService_Factory","MatTableFilterService","_alphaNumericService","_arrayService","propertyOptions","commonOptions","propertyName","exampleKeys","exampleValue","hasOwnProperty","itemValue","nextPropertyName","getNextPropertyName","finalizeOptionsForProperty","customPredicate","columnOptions","isAlphaNumeric","valuePair","toString","executeCondition","filterPredicate","oldEntity","newEntity","toPlainJson","parse","MatTableFilterService_Factory","MatTableFilterDirective","_filterService","_table","debounceTime","initDebounceSubject","isChanged","_oldExampleEntity","exampleEntity","_exampleEntitySubject","next","pipe","updateFilterPredicate","matDataSource","getMatDataSource","getFilterPredicate","matTable","String","Function","MatTableFilterModule","AppComponent","markedOptions","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","AppModule","showCaseExamples","Map","AddToShowCase","categoryName","description","categoryArray","examples","set","BaseComponent","ExampleViewerComponent","showSource","ASSETS_ROOT","SOURCES_PATH","htmlDoc","resolveFilePath","tsDoc","cssDoc","Product","PRODUCTS","category","brand","availableSizes","ArrayFilterComponent","displayedColumns","separatorKeysCodes","event","input","trim","filterEntity","size","indexOf","splice","BriefExporterComponent","title","ELEMENT_DATA","position","name","surname","birth","Route","ROUTES","journeyTime","CustomColumnFilterComponent","routeName","CustomExporter","log","CustomExporterComponent","customExporter","Captain","SpaceCraft","SPACECRAFT_DATA","isConstitutionClass","captain","PropertyOptionsComponent","SelectionExporterComponent","selection","numSelected","selected","numRows","toggle","toggleRow","isAllSelected","isSelected","SimpleFilterComponent","ExporterComponent","FilterComponent","environment","production","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { __decorate, __metadata } from 'tslib';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { NgModule, ÉµÉµdefineInjectable, Injectable, Injector, ÉµÉµinject, INJECTOR, EventEmitter, Renderer2, Input, Output, Directive } from '@angular/core';\nimport { utils, write } from 'xlsx';\nimport { saveAs } from 'file-saver';\n\nlet CdkTableExporterModule = class CdkTableExporterModule {\r\n};\r\nCdkTableExporterModule = __decorate([\r\n    NgModule({\r\n        declarations: [],\r\n        imports: [\r\n            CdkTableModule\r\n        ],\r\n        exports: []\r\n    })\r\n], CdkTableExporterModule);\n\nvar ExportType;\r\n(function (ExportType) {\r\n    ExportType[\"XLS\"] = \"xls\";\r\n    ExportType[\"XLSX\"] = \"xlsx\";\r\n    ExportType[\"CSV\"] = \"csv\";\r\n    ExportType[\"TXT\"] = \"txt\";\r\n    ExportType[\"JSON\"] = \"json\";\r\n    ExportType[\"OTHER\"] = \"other\";\r\n})(ExportType || (ExportType = {}));\n\nlet DataExtractorService = class DataExtractorService {\r\n    constructor() {\r\n    }\r\n    extractRows(cdkTable, hiddenColumns, outlet) {\r\n        return this.getRowsAsJsonArray(cdkTable, hiddenColumns, (outlet !== null && outlet !== void 0 ? outlet : cdkTable._rowOutlet));\r\n    }\r\n    getRowsAsJsonArray(cdkTable, hiddenColumns, outlet) {\r\n        const renderedRows = this.getRenderedRows(cdkTable, outlet);\r\n        return this.convertToJsonArray(hiddenColumns, renderedRows);\r\n    }\r\n    getRenderedRows(cdkTable, outlet) {\r\n        return cdkTable._getRenderedRows(outlet);\r\n    }\r\n    convertToJsonArray(hiddenColumns, rows) {\r\n        const result = new Array();\r\n        // tslint:disable-next-line:prefer-for-of\r\n        for (let i = 0; i < rows.length; i++) {\r\n            const row = this.convertRow(hiddenColumns, rows[i]);\r\n            result.push(this.createExcelItem(row));\r\n        }\r\n        return result;\r\n    }\r\n    convertRow(hiddenColumns, row) {\r\n        const result = new Array();\r\n        const cells = row.children;\r\n        for (let i = 0; i < cells.length; i++) {\r\n            if (!this.shouldHide(hiddenColumns, i)) {\r\n                const element = cells.item(i).innerText;\r\n                result.push(element);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    shouldHide(hiddenColumns, columnIndex) {\r\n        if (hiddenColumns && hiddenColumns.includes(columnIndex)) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    createExcelItem(row) {\r\n        return Object.assign({}, row);\r\n    }\r\n};\r\nDataExtractorService.Éµprov = ÉµÉµdefineInjectable({ factory: function DataExtractorService_Factory() { return new DataExtractorService(); }, token: DataExtractorService, providedIn: \"root\" });\r\nDataExtractorService = __decorate([\r\n    Injectable({\r\n        providedIn: 'root'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], DataExtractorService);\n\nclass Mime {\r\n    constructor(extension, contentTypeHeader) {\r\n        this.extension = extension;\r\n        this.contentTypeHeader = contentTypeHeader;\r\n    }\r\n}\n\nconst MAT_TABLE_EXPORTER = 'mat-table-exporter';\r\nconst TYPE_ARRAY = 'array';\r\nconst CHAR_SET_UTF = ';charset=utf-';\r\nconst CHAR_SET_UTF_8 = CHAR_SET_UTF + '8';\r\nconst CONTENT_TYPE_TEXT = ExportType.TXT + '/';\r\nconst CONTENT_TYPE_APPLICATION = 'application/';\r\nconst CONTENT_TYPE_EXCEL = CONTENT_TYPE_APPLICATION + 'octet-stream';\r\nconst DOT = '.';\r\nconst EXTENSION_XLS = DOT + ExportType.XLS;\r\nconst EXTENSION_XLSX = DOT + ExportType.XLSX;\r\nconst EXTENSION_CSV = DOT + ExportType.CSV;\r\nconst EXTENSION_JSON = DOT + ExportType.JSON;\r\nconst EXTENSION_TEXT = DOT + ExportType.TXT;\r\nconst MIME_EXCEL_XLS = new Mime(EXTENSION_XLS, CONTENT_TYPE_EXCEL + CHAR_SET_UTF_8);\r\nconst MIME_EXCEL_XLSX = new Mime(EXTENSION_XLSX, CONTENT_TYPE_EXCEL + CHAR_SET_UTF_8);\r\nconst MIME_JSON = new Mime(EXTENSION_JSON, CONTENT_TYPE_TEXT + JSON + CHAR_SET_UTF_8);\r\nconst MIME_TXT = new Mime(EXTENSION_TEXT, CONTENT_TYPE_TEXT + ExportType.TXT + CHAR_SET_UTF_8);\r\nconst MIME_CSV = new Mime(EXTENSION_CSV, CONTENT_TYPE_TEXT + ExportType.CSV + CHAR_SET_UTF_8);\r\nconst REF = '!ref';\r\nconst XLS_REGEX = DOT + '*\\.' + ExportType.XLS + '$';\r\nconst RETURN = '\\n';\r\nconst TAB = '\\t';\r\nconst XLSX_COLS = '!cols';\n\nclass FileUtil {\r\n    static save(content, mime, options) {\r\n        const blob = new Blob([content], { type: mime.contentTypeHeader });\r\n        let fileName = MAT_TABLE_EXPORTER;\r\n        if (options && options.fileName) {\r\n            fileName = options.fileName;\r\n        }\r\n        saveAs(blob, fileName + mime.extension);\r\n    }\r\n    static isXls(fileName) {\r\n        return fileName.toLowerCase().match(XLS_REGEX) != null;\r\n    }\r\n    static identifyExportType(fileName) {\r\n        if (fileName && FileUtil.isXls(fileName)) {\r\n            return ExportType.XLS;\r\n        }\r\n        else {\r\n            return ExportType.XLSX;\r\n        }\r\n    }\r\n    static removeExtension(options) {\r\n        options.fileName = options.fileName.split(DOT)[0];\r\n    }\r\n}\n\nclass FileExporter {\r\n    constructor() { }\r\n    export(rows, options) {\r\n        if (!rows) {\r\n            throw new Error('Empty json array is provided, rows parameter is mandatory!');\r\n        }\r\n        const content = this.createContent(rows, options);\r\n        const mimeType = this.getMimeType();\r\n        FileUtil.save(content, mimeType, options);\r\n    }\r\n}\n\n/**\r\n * An angular service class that is used to create files out of json object arrays.\r\n */\r\nclass WorksheetExporter extends FileExporter {\r\n    constructor() {\r\n        super();\r\n    }\r\n    createContent(rows, options) {\r\n        const workSheet = utils.json_to_sheet(rows, {\r\n            skipHeader: true // we don't want to see object properties as our headers\r\n        });\r\n        return this.workSheetToContent(workSheet, options);\r\n    }\r\n}\n\nlet CsvExporterService = class CsvExporterService extends WorksheetExporter {\r\n    constructor() {\r\n        super();\r\n    }\r\n    workSheetToContent(worksheet, options) {\r\n        return utils.sheet_to_csv(worksheet);\r\n    }\r\n    getMimeType() {\r\n        return MIME_CSV;\r\n    }\r\n};\r\nCsvExporterService.Éµprov = ÉµÉµdefineInjectable({ factory: function CsvExporterService_Factory() { return new CsvExporterService(); }, token: CsvExporterService, providedIn: \"root\" });\r\nCsvExporterService = __decorate([\r\n    Injectable({\r\n        providedIn: 'root'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], CsvExporterService);\n\nlet TxtExporterService = class TxtExporterService extends FileExporter {\r\n    constructor() {\r\n        super();\r\n    }\r\n    createContent(rows, options) {\r\n        let content = '';\r\n        rows.forEach(element => {\r\n            content += Object.values(element).join(this.getDelimiter(options)) + RETURN;\r\n        });\r\n        return content;\r\n    }\r\n    getMimeType() {\r\n        return MIME_TXT;\r\n    }\r\n    getDelimiter(options) {\r\n        if (options && options.delimiter) {\r\n            return options.delimiter;\r\n        }\r\n        else {\r\n            return TAB;\r\n        }\r\n    }\r\n};\r\nTxtExporterService.Éµprov = ÉµÉµdefineInjectable({ factory: function TxtExporterService_Factory() { return new TxtExporterService(); }, token: TxtExporterService, providedIn: \"root\" });\r\nTxtExporterService = __decorate([\r\n    Injectable({\r\n        providedIn: 'root'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], TxtExporterService);\n\nlet XlsExporterService = class XlsExporterService extends WorksheetExporter {\r\n    constructor() {\r\n        super();\r\n    }\r\n    workSheetToContent(worksheet, options = {}) {\r\n        const workBook = utils.book_new();\r\n        if (options.columnWidths) {\r\n            worksheet[XLSX_COLS] = this.convertToWch(options.columnWidths);\r\n        }\r\n        this.correctTypes(options);\r\n        utils.book_append_sheet(workBook, worksheet, options.sheet);\r\n        return write(workBook, options);\r\n    }\r\n    getMimeType() {\r\n        return MIME_EXCEL_XLS;\r\n    }\r\n    correctTypes(options) {\r\n        if (!options.type) {\r\n            options.type = TYPE_ARRAY;\r\n        }\r\n        options.bookType = this.getMimeType().extension.replace('.', ''); // sheetjs requires bookingType for excel format\r\n    }\r\n    convertToWch(columnWidths) {\r\n        return columnWidths.map(width => ({ wch: width }));\r\n    }\r\n};\r\nXlsExporterService.Éµprov = ÉµÉµdefineInjectable({ factory: function XlsExporterService_Factory() { return new XlsExporterService(); }, token: XlsExporterService, providedIn: \"root\" });\r\nXlsExporterService = __decorate([\r\n    Injectable({\r\n        providedIn: 'root'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], XlsExporterService);\n\nlet JsonExporterService = class JsonExporterService extends FileExporter {\r\n    constructor() {\r\n        super();\r\n    }\r\n    createContent(rows, options) {\r\n        return JSON.stringify(rows);\r\n    }\r\n    getMimeType() {\r\n        return MIME_JSON;\r\n    }\r\n};\r\nJsonExporterService.Éµprov = ÉµÉµdefineInjectable({ factory: function JsonExporterService_Factory() { return new JsonExporterService(); }, token: JsonExporterService, providedIn: \"root\" });\r\nJsonExporterService = __decorate([\r\n    Injectable({\r\n        providedIn: 'root'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], JsonExporterService);\n\nlet XlsxExporterService = class XlsxExporterService extends XlsExporterService {\r\n    constructor() {\r\n        super();\r\n    }\r\n    // override\r\n    getMimeType() {\r\n        return MIME_EXCEL_XLSX;\r\n    }\r\n};\r\nXlsxExporterService.Éµprov = ÉµÉµdefineInjectable({ factory: function XlsxExporterService_Factory() { return new XlsxExporterService(); }, token: XlsxExporterService, providedIn: \"root\" });\r\nXlsxExporterService = __decorate([\r\n    Injectable({\r\n        providedIn: 'root'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], XlsxExporterService);\n\nlet ServiceLocatorService = class ServiceLocatorService {\r\n    constructor(injector) {\r\n        this.injector = injector;\r\n    }\r\n    getService(exportType) {\r\n        switch (exportType) {\r\n            case ExportType.XLS.valueOf():\r\n                return this.injector.get(XlsExporterService);\r\n            case ExportType.XLSX.valueOf():\r\n                return this.injector.get(XlsxExporterService);\r\n            case ExportType.JSON.valueOf():\r\n                return this.injector.get(JsonExporterService);\r\n            case ExportType.TXT.valueOf():\r\n                return this.injector.get(TxtExporterService);\r\n            case ExportType.CSV.valueOf():\r\n                return this.injector.get(CsvExporterService);\r\n            case ExportType.OTHER.valueOf():\r\n                return null;\r\n            default:\r\n                return this.injector.get(XlsxExporterService);\r\n        }\r\n    }\r\n};\r\nServiceLocatorService.ctorParameters = () => [\r\n    { type: Injector }\r\n];\r\nServiceLocatorService.Éµprov = ÉµÉµdefineInjectable({ factory: function ServiceLocatorService_Factory() { return new ServiceLocatorService(ÉµÉµinject(INJECTOR)); }, token: ServiceLocatorService, providedIn: \"root\" });\r\nServiceLocatorService = __decorate([\r\n    Injectable({\r\n        providedIn: 'root'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [Injector])\r\n], ServiceLocatorService);\n\n/**\r\n * Exporter class for CdkTable. Abstracts the varying behaviors among different CdkTable implementations.\r\n */\r\nlet CdkTableExporter = class CdkTableExporter {\r\n    constructor(renderer, serviceLocator, dataExtractor, _cdkTable) {\r\n        this.renderer = renderer;\r\n        this.serviceLocator = serviceLocator;\r\n        this.dataExtractor = dataExtractor;\r\n        this._cdkTable = _cdkTable;\r\n        this.exportCompleted = new EventEmitter();\r\n        this.exportStarted = new EventEmitter();\r\n    }\r\n    /**\r\n     * Triggers page event chain thus extracting and exporting all the rows in nativetables in pages\r\n     */\r\n    exportTable(exportType, options) {\r\n        this.loadExporter(exportType);\r\n        this._options = options;\r\n        this.exportStarted.emit();\r\n        this._isIterating = true;\r\n        this._isExporting = true;\r\n        this._data = new Array();\r\n        this.extractTableHeader();\r\n        try {\r\n            this.exportWithPagination();\r\n        }\r\n        catch (notPaginated) {\r\n            this.exportSinglePage();\r\n        }\r\n    }\r\n    toggleRow(index) {\r\n        const paginatedRowIndex = this.getPaginatedRowIndex(index);\r\n        if (this.isToggleOn(paginatedRowIndex)) {\r\n            this.toggleOff(paginatedRowIndex);\r\n        }\r\n        else {\r\n            this.toggleOn(paginatedRowIndex);\r\n        }\r\n    }\r\n    toggleOn(index) {\r\n        this._selectedRows = [...(this._selectedRows || []), index];\r\n    }\r\n    toggleOff(index) {\r\n        this._selectedRows = this._selectedRows.filter(x => x !== index);\r\n    }\r\n    isToggleOn(index) {\r\n        var _a;\r\n        return (_a = this._selectedRows) === null || _a === void 0 ? void 0 : _a.includes(index);\r\n    }\r\n    loadExporter(exportType) {\r\n        if (exportType === ExportType.OTHER.valueOf()) {\r\n            this._exporterService = this.exporter;\r\n        }\r\n        else {\r\n            this._exporterService = this.serviceLocator.getService(exportType);\r\n        }\r\n    }\r\n    exportWithPagination() {\r\n        this._initialPageIndex = this.getCurrentPageIndex();\r\n        this.initPageHandler();\r\n        this.goToPage(0);\r\n    }\r\n    exportSinglePage() {\r\n        this.extractDataOnCurrentPage();\r\n        this.extractTableFooter();\r\n        this.exportExtractedData();\r\n    }\r\n    extractDataOnCurrentPage() {\r\n        const rows = this.dataExtractor.extractRows(this._cdkTable, this.hiddenColumns);\r\n        this._data = this._data.concat(this.getSelectedRows(rows));\r\n    }\r\n    getSelectedRows(rows) {\r\n        if (this.isSelectiveExport()) {\r\n            return rows.filter((_, i) => this._selectedRows.includes(this.getPaginatedRowIndex(i)));\r\n        }\r\n        else {\r\n            return rows;\r\n        }\r\n    }\r\n    isSelectiveExport() {\r\n        return this._selectedRows && !this.isMasterToggleOff() && !this.isMasterToggleOn();\r\n    }\r\n    isMasterToggleOn() {\r\n        return this.compareSelectedRowCount(this.getTotalItemsCount());\r\n    }\r\n    isMasterToggleOff() {\r\n        return this.compareSelectedRowCount(0);\r\n    }\r\n    compareSelectedRowCount(rowCount) {\r\n        var _a;\r\n        return !!(((_a = this._selectedRows) === null || _a === void 0 ? void 0 : _a.length) === rowCount);\r\n    }\r\n    initPageHandler() {\r\n        if (!this._subscription) {\r\n            this._subscription = this.getPageChangeObservable().subscribe(() => {\r\n                setTimeout(() => {\r\n                    if (this._isIterating) {\r\n                        this.extractDataOnCurrentPage();\r\n                        if (this.hasNextPage()) {\r\n                            this.nextPage();\r\n                        }\r\n                        else {\r\n                            this._isIterating = false;\r\n                            this.goToPage(this._initialPageIndex);\r\n                        }\r\n                    }\r\n                    else if (this._isExporting) {\r\n                        this._isExporting = false;\r\n                        this.extractTableFooter();\r\n                        this.exportExtractedData();\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n    exportExtractedData() {\r\n        this._exporterService.export(this._data, this._options);\r\n        this._data = new Array();\r\n        this.exportCompleted.emit();\r\n    }\r\n    extractSpecialRows(outlet) {\r\n        this._data.push(...this.dataExtractor.extractRows(this._cdkTable, this.hiddenColumns, outlet));\r\n    }\r\n    extractTableHeader() {\r\n        this.extractSpecialRows(this._cdkTable._headerRowOutlet);\r\n    }\r\n    extractTableFooter() {\r\n        this.extractSpecialRows(this._cdkTable._footerRowOutlet);\r\n    }\r\n    hasNextPage() {\r\n        if (this.getCurrentPageIndex() < this.getPageCount() - 1) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    nextPage() {\r\n        this.goToPage(this.getCurrentPageIndex() + 1);\r\n    }\r\n    getPaginatedRowIndex(index) {\r\n        return index + (this.getPageSize() * this.getCurrentPageIndex());\r\n    }\r\n};\r\nCdkTableExporter.ctorParameters = () => [\r\n    { type: Renderer2 },\r\n    { type: ServiceLocatorService },\r\n    { type: DataExtractorService },\r\n    { type: undefined }\r\n];\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Array)\r\n], CdkTableExporter.prototype, \"hiddenColumns\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], CdkTableExporter.prototype, \"exporter\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], CdkTableExporter.prototype, \"exportCompleted\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], CdkTableExporter.prototype, \"exportStarted\", void 0);\r\nCdkTableExporter = __decorate([\r\n    Directive(),\r\n    __metadata(\"design:paramtypes\", [Renderer2,\r\n        ServiceLocatorService,\r\n        DataExtractorService, Object])\r\n], CdkTableExporter);\n\n/*\r\n * Public API Surface of cdk-table-exporter\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { CHAR_SET_UTF, CHAR_SET_UTF_8, CONTENT_TYPE_APPLICATION, CONTENT_TYPE_EXCEL, CONTENT_TYPE_TEXT, CdkTableExporter, CdkTableExporterModule, CsvExporterService, DOT, DataExtractorService, EXTENSION_CSV, EXTENSION_JSON, EXTENSION_TEXT, EXTENSION_XLS, EXTENSION_XLSX, ExportType, FileExporter, FileUtil, JsonExporterService, MAT_TABLE_EXPORTER, MIME_CSV, MIME_EXCEL_XLS, MIME_EXCEL_XLSX, MIME_JSON, MIME_TXT, Mime, REF, RETURN, ServiceLocatorService, TAB, TYPE_ARRAY, TxtExporterService, WorksheetExporter, XLSX_COLS, XLS_REGEX, XlsExporterService, XlsxExporterService };\n//# sourceMappingURL=cdk-table-exporter.js.map\n","import { __decorate, __param, __metadata } from 'tslib';\nimport { CdkTableExporter, ServiceLocatorService, DataExtractorService, CdkTableExporterModule } from 'cdk-table-exporter';\nexport * from 'cdk-table-exporter';\nimport { MatTable, MatTableModule } from '@angular/material/table';\nimport { Renderer2, Host, Self, Optional, Directive, NgModule } from '@angular/core';\n\nlet MatTableExporterDirective = class MatTableExporterDirective extends CdkTableExporter {\r\n    constructor(renderer, serviceLocator, dataExtractor, table) {\r\n        super(renderer, serviceLocator, dataExtractor, table);\r\n    }\r\n    /**\r\n     * Overriding ngAfterViewInit of TableExporter\r\n     */\r\n    ngAfterViewInit() {\r\n        this.exportStarted.subscribe(_ => {\r\n            this.enablePaginator(false);\r\n        });\r\n        this.exportCompleted.subscribe(_ => {\r\n            this.enablePaginator(true);\r\n        });\r\n    }\r\n    /**\r\n     * MatTable implementation of getPageCount\r\n     */\r\n    getPageCount() {\r\n        return this.getPaginator().getNumberOfPages();\r\n    }\r\n    /**\r\n     * MatTable implementation of getPageSize\r\n     */\r\n    getPageSize() {\r\n        var _a, _b;\r\n        return _b = (_a = this.getPaginator()) === null || _a === void 0 ? void 0 : _a.pageSize, (_b !== null && _b !== void 0 ? _b : 0);\r\n    }\r\n    /**\r\n     * MatTable implementation of getCurrentPageIndex\r\n     */\r\n    getCurrentPageIndex() {\r\n        var _a, _b;\r\n        return _b = (_a = this.getPaginator()) === null || _a === void 0 ? void 0 : _a.pageIndex, (_b !== null && _b !== void 0 ? _b : 0);\r\n    }\r\n    /**\r\n     * MatTable implementation of getTotalItemsCount\r\n     */\r\n    getTotalItemsCount() {\r\n        var _a, _b, _c, _d, _e;\r\n        return _e = (_b = (_a = this.getPaginator()) === null || _a === void 0 ? void 0 : _a.length, (_b !== null && _b !== void 0 ? _b : (_d = (_c = this.getDataSource()) === null || _c === void 0 ? void 0 : _c.data) === null || _d === void 0 ? void 0 : _d.length)), (_e !== null && _e !== void 0 ? _e : 0);\r\n    }\r\n    /**\r\n     * MatTable implementation of goToPage\r\n     */\r\n    goToPage(index) {\r\n        this.getPaginator().pageIndex = index;\r\n        this.getPaginator()._changePageSize(this.getPaginator().pageSize);\r\n    }\r\n    /**\r\n     * MatTable implementation of getPageChangeObservable\r\n     */\r\n    getPageChangeObservable() {\r\n        return this.getPaginator().page;\r\n    }\r\n    getDataSource() {\r\n        return this._cdkTable.dataSource;\r\n    }\r\n    getPaginator() {\r\n        return this.getDataSource().paginator;\r\n    }\r\n    enablePaginator(value) {\r\n        if (this.getPaginator()) {\r\n            this.getPaginator().disabled = !value;\r\n            this.getPaginator()._changePageSize(this.getPaginator().pageSize);\r\n        }\r\n    }\r\n};\r\nMatTableExporterDirective.ctorParameters = () => [\r\n    { type: Renderer2 },\r\n    { type: ServiceLocatorService },\r\n    { type: DataExtractorService },\r\n    { type: MatTable, decorators: [{ type: Host }, { type: Self }, { type: Optional }] }\r\n];\r\nMatTableExporterDirective = __decorate([\r\n    Directive({\r\n        selector: '[matTableExporter]',\r\n        exportAs: 'matTableExporter'\r\n    }),\r\n    __param(3, Host()), __param(3, Self()), __param(3, Optional()),\r\n    __metadata(\"design:paramtypes\", [Renderer2,\r\n        ServiceLocatorService,\r\n        DataExtractorService,\r\n        MatTable])\r\n], MatTableExporterDirective);\n\nlet MatTableExporterModule = class MatTableExporterModule {\r\n};\r\nMatTableExporterModule = __decorate([\r\n    NgModule({\r\n        declarations: [MatTableExporterDirective],\r\n        imports: [\r\n            MatTableModule,\r\n            CdkTableExporterModule\r\n        ],\r\n        exports: [MatTableExporterDirective]\r\n    })\r\n], MatTableExporterModule);\n\n/*\r\n * Public API Surface of mat-table-exporter\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { MatTableExporterDirective, MatTableExporterModule };\n//# sourceMappingURL=mat-table-exporter.js.map\n","import { __decorate, __metadata, __param } from 'tslib';\nimport { ÉµÉµdefineInjectable, Injectable, ÉµÉµinject, Host, Self, Optional, Input, Directive, NgModule } from '@angular/core';\nimport { MatTable, MatTableModule } from '@angular/material/table';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { isString, isEqual, difference, flatten, cloneDeep, isNil, every, isEmpty, isArray, isBoolean, isNumber } from 'lodash';\nimport { isFunction } from 'util';\n\nvar MatTableFilter;\r\n(function (MatTableFilter) {\r\n    MatTableFilter[\"EQUALS\"] = \"EQUALS\";\r\n    MatTableFilter[\"ANYWHERE\"] = \"ANYWHERE\";\r\n    MatTableFilter[\"STARTS_WITH\"] = \"STARTS_WITH\";\r\n    MatTableFilter[\"ENDS_WITH\"] = \"ENDS_WITH\";\r\n})(MatTableFilter || (MatTableFilter = {}));\n\nclass FilterPredicate {\r\n    executeCondition(itemPair, options) {\r\n        this.handleLetterCasing(itemPair, options.caseSensitive);\r\n        switch (options.filterType) {\r\n            case MatTableFilter.EQUALS:\r\n                return this.equals(itemPair);\r\n            case MatTableFilter.ANYWHERE:\r\n                return this.anywhere(itemPair);\r\n            case MatTableFilter.STARTS_WITH:\r\n                return this.startsWith(itemPair);\r\n            case MatTableFilter.ENDS_WITH:\r\n                return this.endsWith(itemPair);\r\n            default:\r\n                return true;\r\n        }\r\n    }\r\n    handleLetterCasing(itemPair, caseSensitive) {\r\n        if (!caseSensitive) {\r\n            this.transformAllLowerCase(itemPair);\r\n        }\r\n    }\r\n    transformAllLowerCase(object) {\r\n        // tslint:disable-next-line:forin\r\n        for (const key in object) {\r\n            const value = object[key];\r\n            if (isString(value)) {\r\n                object[key] = value.toLowerCase();\r\n            }\r\n            else {\r\n                this.transformAllLowerCase(value);\r\n            }\r\n        }\r\n    }\r\n}\n\nvar ArrayPredicateService_1;\r\nlet ArrayPredicateService = ArrayPredicateService_1 = class ArrayPredicateService extends FilterPredicate {\r\n    constructor() {\r\n        super();\r\n    }\r\n    static warn() {\r\n        console.warn(ArrayPredicateService_1.UNSUPPORTED_OPERATION_WARNING);\r\n        console.warn(ArrayPredicateService_1.SUGGESTION_WARNING);\r\n    }\r\n    equals(itemPair) {\r\n        return isEqual(itemPair.example.sort(), itemPair.item.sort());\r\n    }\r\n    anywhere(itemPair) {\r\n        return this.isSubset(itemPair.example, itemPair.item);\r\n    }\r\n    startsWith(itemPair) {\r\n        ArrayPredicateService_1.warn();\r\n        return this.anywhere(itemPair);\r\n    }\r\n    endsWith(itemPair) {\r\n        ArrayPredicateService_1.warn();\r\n        return this.anywhere(itemPair);\r\n    }\r\n    isSubset(example, item) {\r\n        return !difference(flatten(example), flatten(item)).length;\r\n    }\r\n};\r\n// tslint:disable-next-line:max-line-length\r\nArrayPredicateService.UNSUPPORTED_OPERATION_WARNING = 'This filterType is unsupported for array filtering. FilterType.ANYWHERE is executed instead!';\r\nArrayPredicateService.SUGGESTION_WARNING = 'You can set a custom predicate for the array property through PropertyOptions!';\r\nArrayPredicateService.Éµprov = ÉµÉµdefineInjectable({ factory: function ArrayPredicateService_Factory() { return new ArrayPredicateService(); }, token: ArrayPredicateService, providedIn: \"root\" });\r\nArrayPredicateService = ArrayPredicateService_1 = __decorate([\r\n    Injectable({\r\n        providedIn: 'root'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], ArrayPredicateService);\n\nlet AlphaNumericPredicateService = class AlphaNumericPredicateService extends FilterPredicate {\r\n    constructor() {\r\n        super();\r\n    }\r\n    equals(itemPair) {\r\n        return itemPair.example === itemPair.item;\r\n    }\r\n    anywhere(itemPair) {\r\n        return itemPair.item.includes(itemPair.example);\r\n    }\r\n    startsWith(itemPair) {\r\n        return itemPair.item.startsWith(itemPair.example);\r\n    }\r\n    endsWith(itemPair) {\r\n        return itemPair.item.endsWith(itemPair.example);\r\n    }\r\n};\r\nAlphaNumericPredicateService.Éµprov = ÉµÉµdefineInjectable({ factory: function AlphaNumericPredicateService_Factory() { return new AlphaNumericPredicateService(); }, token: AlphaNumericPredicateService, providedIn: \"root\" });\r\nAlphaNumericPredicateService = __decorate([\r\n    Injectable({\r\n        providedIn: 'root'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], AlphaNumericPredicateService);\n\nlet MatTableFilterService = class MatTableFilterService {\r\n    constructor(_alphaNumericService, _arrayService) {\r\n        this._alphaNumericService = _alphaNumericService;\r\n        this._arrayService = _arrayService;\r\n    }\r\n    filterPredicate(itemPair, propertyOptions, commonOptions, propertyName) {\r\n        // tslint:disable-next-line:forin\r\n        const exampleKeys = Object.keys(itemPair.example);\r\n        for (const key of exampleKeys) {\r\n            const exampleValue = cloneDeep(itemPair.example[key]);\r\n            if (isNil(exampleValue) || every(exampleValue, isEmpty) && typeof exampleValue !== 'boolean') {\r\n                // if example entity's property is undefined/null/empty then it means the caller wants all the data\r\n                continue;\r\n            }\r\n            if (itemPair.item.hasOwnProperty(key)) {\r\n                // if example entity has additional columns then search fails\r\n                const itemValue = cloneDeep(itemPair.item[key]);\r\n                const nextPropertyName = this.getNextPropertyName(propertyName, key);\r\n                const options = this.finalizeOptionsForProperty(commonOptions, propertyOptions, nextPropertyName);\r\n                if (isFunction(options)) { // if user defined predicate is present for property\r\n                    const customPredicate = options;\r\n                    if (!customPredicate(itemValue)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                else {\r\n                    const columnOptions = options;\r\n                    if (this.isAlphaNumeric(itemValue)) {\r\n                        const valuePair = { item: itemValue.toString(), example: exampleValue };\r\n                        if (!this._alphaNumericService.executeCondition(valuePair, columnOptions)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else if (isArray(itemValue)) {\r\n                        const valuePair = { item: itemValue, example: exampleValue };\r\n                        if (!this._arrayService.executeCondition(valuePair, columnOptions)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else if (isBoolean(itemValue)) {\r\n                        if (itemValue !== exampleValue) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else {\r\n                        const valuePair = { item: itemValue, example: exampleValue };\r\n                        if (!this.filterPredicate(valuePair, propertyOptions, options, nextPropertyName)) {\r\n                            // if one of the inner properties returns true, this shouldnt affect the whole item's filtering\r\n                            // however if it returns false then the item must not be in the list\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    finalizeOptionsForProperty(commonOptions, propertyOptions, propertyName) {\r\n        if (propertyOptions && propertyOptions.hasOwnProperty(propertyName)) {\r\n            return propertyOptions[propertyName];\r\n        }\r\n        else {\r\n            return commonOptions;\r\n        }\r\n    }\r\n    getNextPropertyName(propertyName, key) {\r\n        return propertyName ? (propertyName + '.' + key) : key;\r\n    }\r\n    isChanged(oldEntity, newEntity) {\r\n        return !isEqual(this.toPlainJson(oldEntity), this.toPlainJson(newEntity));\r\n    }\r\n    toPlainJson(object) {\r\n        if (object) {\r\n            return JSON.parse(JSON.stringify(object));\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    isAlphaNumeric(value) {\r\n        return isString(value) || isNumber(value);\r\n    }\r\n};\r\nMatTableFilterService.ctorParameters = () => [\r\n    { type: AlphaNumericPredicateService },\r\n    { type: ArrayPredicateService }\r\n];\r\nMatTableFilterService.Éµprov = ÉµÉµdefineInjectable({ factory: function MatTableFilterService_Factory() { return new MatTableFilterService(ÉµÉµinject(AlphaNumericPredicateService), ÉµÉµinject(ArrayPredicateService)); }, token: MatTableFilterService, providedIn: \"root\" });\r\nMatTableFilterService = __decorate([\r\n    Injectable({\r\n        providedIn: 'root'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [AlphaNumericPredicateService, ArrayPredicateService])\r\n], MatTableFilterService);\n\nlet MatTableFilterDirective = class MatTableFilterDirective {\r\n    constructor(_filterService, _table) {\r\n        this._filterService = _filterService;\r\n        this._table = _table;\r\n        /**\r\n         * in millis\r\n         */\r\n        this.debounceTime = 400;\r\n        this.filterType = MatTableFilter.ANYWHERE;\r\n        this.caseSensitive = false;\r\n        this.initDebounceSubject();\r\n    }\r\n    ngDoCheck() {\r\n        if (this._filterService.isChanged(this._oldExampleEntity, this.exampleEntity)) {\r\n            this._oldExampleEntity = this._filterService.toPlainJson(this.exampleEntity);\r\n            this._exampleEntitySubject.next(undefined);\r\n        }\r\n    }\r\n    initDebounceSubject() {\r\n        this._exampleEntitySubject = new BehaviorSubject(null);\r\n        this._exampleEntitySubject.pipe(debounceTime(this.debounceTime))\r\n            .subscribe(_ => {\r\n            this.updateFilterPredicate();\r\n        });\r\n    }\r\n    updateFilterPredicate() {\r\n        const matDataSource = this.getMatDataSource();\r\n        if (matDataSource) {\r\n            matDataSource.filterPredicate = this.getFilterPredicate();\r\n            matDataSource.filter = this.exampleEntity;\r\n        }\r\n    }\r\n    getFilterPredicate() {\r\n        if (this.customPredicate) {\r\n            return this.customPredicate;\r\n        }\r\n        else {\r\n            return (item) => {\r\n                return this._filterService.filterPredicate({ example: this.exampleEntity, item }, this.propertyOptions, { filterType: this.filterType, caseSensitive: this.caseSensitive });\r\n            };\r\n        }\r\n    }\r\n    getMatDataSource() {\r\n        const matTable = this._table;\r\n        return matTable.dataSource;\r\n    }\r\n};\r\nMatTableFilterDirective.ctorParameters = () => [\r\n    { type: MatTableFilterService },\r\n    { type: MatTable, decorators: [{ type: Host }, { type: Self }, { type: Optional }] }\r\n];\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], MatTableFilterDirective.prototype, \"exampleEntity\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], MatTableFilterDirective.prototype, \"debounceTime\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], MatTableFilterDirective.prototype, \"filterType\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], MatTableFilterDirective.prototype, \"caseSensitive\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Function)\r\n], MatTableFilterDirective.prototype, \"customPredicate\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], MatTableFilterDirective.prototype, \"propertyOptions\", void 0);\r\nMatTableFilterDirective = __decorate([\r\n    Directive({\r\n        selector: '[matTableFilter]',\r\n        exportAs: 'matTableFilter'\r\n    }),\r\n    __param(1, Host()), __param(1, Self()), __param(1, Optional()),\r\n    __metadata(\"design:paramtypes\", [MatTableFilterService,\r\n        MatTable])\r\n], MatTableFilterDirective);\n\nlet MatTableFilterModule = class MatTableFilterModule {\r\n};\r\nMatTableFilterModule = __decorate([\r\n    NgModule({\r\n        declarations: [MatTableFilterDirective],\r\n        imports: [\r\n            MatTableModule\r\n        ],\r\n        exports: [MatTableFilterDirective]\r\n    })\r\n], MatTableFilterModule);\n\n/*\r\n * Public API Surface of mat-table-filter\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { MatTableFilter, MatTableFilterDirective, MatTableFilterModule, MatTableFilterService, AlphaNumericPredicateService as Éµa, FilterPredicate as Éµb, ArrayPredicateService as Éµc };\n//# sourceMappingURL=mat-table-filter.js.map\n","<header class=\"docs-header-background\">\r\n  <div class=\"docs-header-section\">\r\n      <a class=\"docs-header-container\" href=\"https://github.com/HalitTalha/mat-table-extensions\" target=\"_blank\">\r\n        <img class=\"docs-header-logo\" src=\"assets/logos/github.png\">\r\n        <a class=\"docs-header-headline\">/HalitTalha</a>\r\n      </a>\r\n    <div class=\"docs-header-headline\">\r\n      <h1 class=\"mat-h1\">ng-material-extensions</h1>\r\n      <h2> Extended features for Angular Material Components</h2>\r\n    </div>\r\n  </div>\r\n</header>\r\n  <mat-tab-group class=\"docs-tabs\" mat-align-tabs=\"center\">\r\n      <mat-tab label=\"mat-table-exporter\">\r\n        <app-exporter></app-exporter>\r\n      </mat-tab>\r\n      <mat-tab label=\"mat-table-filter\">\r\n        <app-filter></app-filter>\r\n      </mat-tab>\r\n  </mat-tab-group>\r\n<footer class=\"docs-footer\">\r\n  <div class=\"docs-footer-list\">\r\n    <div class=\"docs-footer-logo\">\r\n      <div class=\"footer-logo\">\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</footer>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {}\r\n","\r\nimport { MatTableFilterModule } from 'mat-table-filter';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n// tslint:disable-next-line:max-line-length\r\n\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatTableExporterModule } from 'mat-table-exporter';\r\nimport { ExporterComponent } from './components/exporter/exporter.component';\r\nimport { FilterComponent } from './components/filter/filter.component';\r\nimport { MarkdownModule, MarkedOptions } from 'ngx-markdown';\r\nimport { AppComponent } from './app.component';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ExampleViewerComponent } from './components/example-viewer/example-viewer.component';\r\nimport { SimpleFilterComponent } from './components/examples/simple-filter/simple-filter.component';\r\nimport { CustomColumnFilterComponent } from './components/examples/custom-column-filter/custom-column-filter.component';\r\nimport { ArrayFilterComponent } from './components/examples/array-filter/array-filter.component';\r\nimport { PropertyOptionsComponent } from './components/examples/property-options/property-options.component';\r\nimport { BriefExporterComponent } from './components/examples/brief-exporter/brief-exporter.component';\r\nimport { CustomExporterComponent } from './components/examples/custom-exporter/custom-exporter.component';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { SelectionExporterComponent } from './components/examples/selection-exporter/selection-exporter.component';\r\n\r\nexport function markedOptions(): MarkedOptions {\r\n\r\n  return {\r\n    gfm: true,\r\n    tables: true,\r\n    breaks: false,\r\n    pedantic: false,\r\n    sanitize: false,\r\n    smartLists: true,\r\n    smartypants: false,\r\n  };\r\n}\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ExporterComponent,\r\n    FilterComponent,\r\n    ExampleViewerComponent,\r\n    ArrayFilterComponent,\r\n    CustomColumnFilterComponent,\r\n    SimpleFilterComponent,\r\n    PropertyOptionsComponent,\r\n    BriefExporterComponent,\r\n    CustomExporterComponent,\r\n    SelectionExporterComponent\r\n  ],\r\n  imports: [\r\n    HttpClientModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    PortalModule,\r\n    MarkdownModule.forRoot({\r\n      loader: HttpClient,\r\n      markedOptions: {\r\n        provide: MarkedOptions,\r\n        useFactory: markedOptions,\r\n      },\r\n    }),\r\n    BrowserAnimationsModule,\r\n    MatTableFilterModule,\r\n    MatTableExporterModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatChipsModule,\r\n    MatDividerModule,\r\n    MatTooltipModule,\r\n    MatSlideToggleModule,\r\n    MatCheckboxModule,\r\n    MatInputModule,\r\n    MatPaginatorModule,\r\n    MatSelectModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n    ArrayFilterComponent,\r\n    BriefExporterComponent,\r\n    CustomColumnFilterComponent,\r\n    CustomExporterComponent,\r\n    SimpleFilterComponent,\r\n    PropertyOptionsComponent,\r\n    SelectionExporterComponent\r\n\r\n  ]\r\n})\r\nexport class AppModule { }\r\n","export const showCaseExamples: Map<string, Array<any>> = new Map();\r\n\r\nexport function AddToShowCase(categoryName: string, fileName: string, description: string) {\r\n  return (type: any) => {\r\n    type.prototype.fileName = fileName;\r\n    type.prototype.description = description;\r\n    const categoryArray = showCaseExamples.get(categoryName);\r\n    if (!categoryArray) {\r\n      const examples = new Array<any>();\r\n      examples.push(type);\r\n      showCaseExamples.set(categoryName, examples);\r\n    } else {\r\n      categoryArray.push(type);\r\n    }\r\n    return type;\r\n  };\r\n}\r\n","export class BaseComponent {\r\n\r\n  examples;\r\n\r\n  constructor() {\r\n  }\r\n\r\n}\r\n","<div class=\"docs-example-viewer-wrapper\">\r\n    <div class=\"docs-example-viewer-title\">\r\n      <div class=\"docs-example-viewer-title-spacer\">{{description}}</div>\r\n\r\n      <button mat-icon-button type=\"button\" (click)=\"toggleSource()\"\r\n              [matTooltip]=\"'View source'\">\r\n        <mat-icon>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\" fit=\"\" preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\">\r\n            <path fill=\"none\" d=\"M0 0h24v24H0V0z\"></path>\r\n            <path d=\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"></path>\r\n          </svg>\r\n        </mat-icon>\r\n      </button>\r\n      <!-- <button mat-icon-button type=\"button\" [matTooltip]=\"'Edit in Stackblitz'\">\r\n        <mat-icon>\r\n          open_in_new\r\n        </mat-icon>\r\n      </button> -->\r\n  </div>\r\n\r\n    <div class=\"docs-example-viewer-source\" *ngIf=\"showSource\">\r\n      <mat-tab-group class=\"docs-source-tabs\">\r\n        <mat-tab label=\"HTML\">\r\n            <markdown [src]=\"htmlDoc\"></markdown>\r\n        </mat-tab>\r\n        <mat-tab label=\"TS\">\r\n            <markdown [src]=\"tsDoc\"></markdown>\r\n        </mat-tab>\r\n        <mat-tab label=\"CSS\">\r\n            <markdown [src]=\"cssDoc\"></markdown>\r\n          </mat-tab>\r\n      </mat-tab-group>\r\n    </div>\r\n    <mat-divider></mat-divider>\r\n    <div class=\"docs-example-viewer-body\">\r\n      <ng-template [cdkPortalOutlet]=\"example\"></ng-template>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ComponentPortal, ComponentType } from '@angular/cdk/portal';\r\n\r\n@Component({\r\n  selector: 'app-example-viewer',\r\n  templateUrl: './example-viewer.component.html',\r\n  styleUrls: ['./example-viewer.component.css']\r\n})\r\nexport class ExampleViewerComponent {\r\n\r\n  private static readonly ASSETS_ROOT: string = './assets/';\r\n  private static readonly SOURCES_PATH: string = 'example-sources/';\r\n\r\n  example: ComponentPortal<any>;\r\n  private fileName: string;\r\n  description: string;\r\n  stackBlitzLink: string;\r\n  @Input()\r\n  set exampleType(type: ComponentType<any>) {\r\n    this.example = new ComponentPortal(type);\r\n    this.fileName = type.prototype.fileName;\r\n    this.description = type.prototype.description;\r\n    // this.stackBlitzLink = type.prototype.stackBlitzLink;\r\n    this.htmlDoc = this.resolveFilePath('.html'); // Will be replaced with a more convinient webpack/bazel solution\r\n    this.tsDoc =  this.resolveFilePath('.js');\r\n    this.cssDoc =  this.resolveFilePath('.css');\r\n  }\r\n\r\n  showSource: boolean;\r\n  htmlDoc: string;\r\n  tsDoc: string;\r\n  cssDoc: string;\r\n\r\n  constructor() { }\r\n\r\n  toggleSource() {\r\n    this.showSource = !this.showSource;\r\n  }\r\n\r\n  private resolveFilePath(extension: string): string {\r\n    return ExampleViewerComponent.ASSETS_ROOT + ExampleViewerComponent.SOURCES_PATH +\r\n    this.fileName.replace('.component', '/') +\r\n    this.fileName + extension;\r\n  }\r\n\r\n}\r\n","<p>Demonstrates filtering of an Array type column. Enter Size chips for filtering.</p>\r\n\r\n<mat-table matTableFilter [exampleEntity]=\"filterEntity\" [filterType]=\"filterType\" [dataSource]=\"dataSource\"\r\n  class=\"mat-elevation-z8\">\r\n  <ng-container matColumnDef=\"category\">\r\n    <mat-header-cell *matHeaderCellDef>\r\n      <mat-form-field appearance=\"outline\">\r\n        <input matInput placeholder=\"Category\" [(ngModel)]=\"filterEntity.category\">\r\n      </mat-form-field>\r\n    </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.category}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"brand\">\r\n    <mat-header-cell *matHeaderCellDef>\r\n      <mat-form-field appearance=\"outline\">\r\n        <input matInput placeholder=\"Product Brand\" [(ngModel)]=\"filterEntity.brand\">\r\n      </mat-form-field>\r\n    </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.brand}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"availableSizes\">\r\n    <mat-header-cell *matHeaderCellDef>\r\n\r\n      <mat-form-field class=\"example-chip-list\">\r\n        <mat-chip-list #chipList aria-label=\"Fruit selection\">\r\n          <mat-chip *ngFor=\"let size of filterEntity.availableSizes\" [selectable]=\"true\" [removable]=\"true\"\r\n            (removed)=\"remove(size)\">\r\n            {{size}}\r\n            <mat-icon matChipRemove>cancel</mat-icon>\r\n          </mat-chip>\r\n          <input placeholder=\"Add Size\" [matChipInputFor]=\"chipList\"\r\n            [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=\"true\"\r\n            (matChipInputTokenEnd)=\"add($event)\">\r\n        </mat-chip-list>\r\n      </mat-form-field>\r\n    </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.availableSizes}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n</mat-table>\r\n","import { MatTableFilter } from 'mat-table-filter';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AddToShowCase } from '../../add-to-showcase';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\n\r\nexport class Product {\r\n  category: string;\r\n  brand: string;\r\n  availableSizes: Array<string>;\r\n}\r\n\r\nconst PRODUCTS: Product[] = [\r\n  {category: 'T-Shirt', brand: 'X', availableSizes: ['S', 'M', 'L', 'XL']},\r\n  {category: 'T-Shirt', brand: 'Y', availableSizes: ['S', 'L', 'XL']},\r\n  {category: 'T-Shirt', brand: 'Z', availableSizes: ['XL']},\r\n  {category: 'Jean', brand: 'X', availableSizes: ['S', 'M', 'L', 'XL']},\r\n  {category: 'Jean', brand: 'Y', availableSizes: ['S', 'M']},\r\n  {category: 'Jean', brand: 'Z', availableSizes: ['S', 'M', 'L']},\r\n  {category: 'Jean', brand: 'B', availableSizes: ['S', 'M', 'L']},\r\n  {category: 'Jacket', brand: 'X', availableSizes: ['S', 'L', 'XL']},\r\n  {category: 'Jacket', brand: 'Z', availableSizes: ['S']},\r\n  {category: 'Pants', brand: 'X', availableSizes: ['S', 'M', 'L', 'XL']},\r\n  {category: 'Pants', brand: 'Y', availableSizes: ['L', 'XL']},\r\n  {category: 'Pants', brand: 'Z', availableSizes: ['S']},\r\n  {category: 'Hat', brand: 'X', availableSizes: ['S', 'M', 'L']},\r\n  {category: 'Skirt', brand: 'X', availableSizes: ['S', 'M', 'L', 'XL']},\r\n  {category: 'Skirt', brand: 'Y', availableSizes: ['S', 'M', 'L']}\r\n ];\r\n\r\n@Component({\r\n  selector: 'app-array-filter',\r\n  templateUrl: './array-filter.component.html',\r\n  styleUrls: ['./array-filter.component.css']\r\n})\r\n@AddToShowCase('filter', 'array-filter.component', 'Array Filter')\r\nexport class ArrayFilterComponent implements OnInit {\r\n  filterEntity: Product;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['category', 'brand', 'availableSizes'];\r\n  dataSource;\r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n\r\n    // Add our fruit\r\n    if ((value || '').trim()) {\r\n      this.filterEntity.availableSizes.push(value.trim());\r\n    }\r\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n  }\r\n\r\n  remove(size: string): void {\r\n    const index = this.filterEntity.availableSizes.indexOf(size);\r\n\r\n    if (index >= 0) {\r\n      this.filterEntity.availableSizes.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.filterEntity = new Product();\r\n    this.filterEntity.availableSizes = new Array<string>(); // DO NOT FORGET TO INIT THE ARRAY\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.dataSource = new MatTableDataSource(PRODUCTS);\r\n  }\r\n}\r\n","<p>Briefly demonstrates all exporting functionalities of mat-table-exporter.</p>\r\n\r\n<div class=\"example-container mat-elevation-z8\">\r\n  <mat-table matTableExporter [dataSource]=\"dataSource\" #exporter=\"matTableExporter\" [hiddenColumns]=\"[0]\">\r\n\r\n    <ng-container matColumnDef=\"position\">\r\n      <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"surname\">\r\n      <mat-header-cell *matHeaderCellDef> Surname </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.surname}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"birth\">\r\n      <mat-header-cell *matHeaderCellDef> Birth </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.birth}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n  </mat-table>\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n<div>\r\n  <button mat-raised-button (click)=\"exporter.exportTable('xlsx', {sheet: 'sheet_name', Props: {Author: 'Talha'}, columnWidths: [50, 5, 3]})\">Excel</button>\r\n  <button mat-raised-button (click)=\"exporter.exportTable('csv')\">Csv</button>\r\n  <button mat-raised-button (click)=\"exporter.exportTable('json')\">Json</button>\r\n  <button mat-raised-button (click)=\"exporter.exportTable('txt')\">Txt</button>\r\n</div>\r\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { AddToShowCase } from '../../add-to-showcase';\r\n\r\n@Component({\r\n  selector: 'app-brief-exporter',\r\n  templateUrl: './brief-exporter.component.html',\r\n  styleUrls: ['./brief-exporter.component.css']\r\n})\r\n@AddToShowCase('exporter', 'brief-exporter.component', 'Overall Exporting Example')\r\nexport class BriefExporterComponent implements AfterViewInit, OnInit {\r\n  title = 'mte-test';\r\n  displayedColumns = ['position', 'name', 'surname', 'birth'];\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  dataSource: MatTableDataSource<Element>;\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new MatTableDataSource<Element>(ELEMENT_DATA);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n}\r\n\r\nexport interface Element {\r\n  name: string;\r\n  position: number;\r\n  surname: string;\r\n  birth: string;\r\n}\r\n\r\nconst ELEMENT_DATA: Element[] = [\r\n  { position: 1, name: 'Albert', surname: 'Einstein', birth: '1879' },\r\n  { position: 2, name: 'Marie', surname: 'Curie', birth: '1867' },\r\n  { position: 3, name: 'Enrico', surname: 'Fermi', birth: '1901' },\r\n  { position: 4, name: 'Dmitri', surname: 'Mendeleev', birth: '1834' },\r\n  { position: 5, name: 'Alfred', surname: 'Nobel', birth: '1833' },\r\n  { position: 6, name: 'Ernest', surname: 'Lawrence', birth: '1901' },\r\n  { position: 7, name: 'Glenn', surname: 'Seaborg', birth: '1912' },\r\n  { position: 8, name: 'Niels', surname: 'Bohr', birth: '1885' },\r\n  { position: 9, name: 'Lise', surname: 'Meitner', birth: '1878' },\r\n  { position: 10, name: 'Wilhelm', surname: 'RÃ¶ntgen', birth: '1845' },\r\n  { position: 11, name: 'Nicolaus', surname: 'Copernicus', birth: '1473' },\r\n  { position: 12, name: 'Georgy', surname: 'Flyorov', birth: '1913' },\r\n  { position: 13, name: 'Yuri', surname: 'Oganessian', birth: '1933' },\r\n  { position: 14, name: 'Johan', surname: 'Gadolin', birth: '1760' },\r\n  { position: 15, name: 'Pierre', surname: 'Curie', birth: '1859' },\r\n];\r\n","<p>Demonstrates a custom filtering requirement where only some part of the string needs to be filtered.</p>\r\n<p>Flight Route is filtered according to the custom filtering predicate provided with propertyOptions.</p>\r\n<mat-table matTableFilter [exampleEntity]=\"filterEntity\" [propertyOptions]=\"propertyOptions\"\r\n[filterType]=\"filterType\" [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n  <ng-container matColumnDef=\"name\">\r\n    <mat-header-cell *matHeaderCellDef>\r\n      <mat-form-field appearance=\"outline\">\r\n        <input matInput placeholder=\"Flight Route\" [(ngModel)]=\"filterEntity.name\">\r\n      </mat-form-field>\r\n    </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"journeyTime\">\r\n    <mat-header-cell *matHeaderCellDef>\r\n      Journey Time\r\n    </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.journeyTime}} </mat-cell>\r\n  </ng-container>\r\n\r\n\r\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n</mat-table>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AddToShowCase } from '../../add-to-showcase';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\n\r\nexport class Route {\r\n  name: string;\r\n  journeyTime: string;\r\n}\r\n\r\nconst ROUTES: Route[] = [\r\n {name: 'FRA-IST-JFK', journeyTime: '10:00'},\r\n {name: 'MLE-IST-ESB', journeyTime: '10:30'},\r\n {name: 'IST-ESB-GZT', journeyTime: '01:30'},\r\n {name: 'IST-ESB-GZT', journeyTime: '01:30'},\r\n {name: 'JFK-SAW-AYT', journeyTime: '02:45'},\r\n {name: 'JFK-SAW-FRA', journeyTime: '02:45'},\r\n {name: 'JFK-SAW-FRA', journeyTime: '02:45'}\r\n];\r\n\r\n@Component({\r\n  selector: 'app-simple-filter',\r\n  templateUrl: './custom-column-filter.component.html',\r\n  styleUrls: ['./custom-column-filter.component.css']\r\n})\r\n@AddToShowCase('filter', 'custom-column-filter.component', 'Custom Property Predicate')\r\nexport class CustomColumnFilterComponent implements OnInit {\r\n  filterEntity: Route;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['name', 'journeyTime'];\r\n  propertyOptions;\r\n  dataSource;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.filterEntity = new Route();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.dataSource = new MatTableDataSource(ROUTES);\r\n    this.propertyOptions = {name: (routeName: string) => { // Custom filtering for name property\r\n      return routeName.split('-')[1] === this.filterEntity.name; // filter for only the station in the middle\r\n    }};\r\n  }\r\n}\r\n","<p>Demonstrates the use of a custom exporter implementation.</p>\r\n\r\n<div class=\"example-container mat-elevation-z8\">\r\n  <mat-table matTableExporter [dataSource]=\"dataSource\" [exporter]= \"customExporter\" #exportDirective=\"matTableExporter\" [hiddenColumns]=\"[0]\" >\r\n\r\n    <ng-container matColumnDef=\"position\">\r\n      <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"surname\">\r\n      <mat-header-cell *matHeaderCellDef> Surname </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.surname}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"birth\">\r\n      <mat-header-cell *matHeaderCellDef> Birth </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.birth}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n  </mat-table>\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n<div>\r\n  <button mat-raised-button (click)=\"exportDirective.exportTable('other')\">Custom Export</button>\r\n</div>\r\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { Exporter, Options } from 'mat-table-exporter';\r\nimport { AddToShowCase } from '../../add-to-showcase';\r\n\r\nexport class CustomExporter implements Exporter<Options> {\r\n  export(rows: Array<any>, options?: Options) {\r\n    console.log(rows);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-custom-exporter',\r\n  templateUrl: './custom-exporter.component.html',\r\n  styleUrls: ['./custom-exporter.component.css']\r\n})\r\n@AddToShowCase('exporter', 'custom-exporter.component', 'Custom Exporting Implementation')\r\nexport class CustomExporterComponent implements OnInit, AfterViewInit {\r\n  title = 'mte-test';\r\n  displayedColumns = ['position', 'name', 'surname', 'birth'];\r\n\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  dataSource: MatTableDataSource<Element>;\r\n  customExporter: CustomExporter;\r\n  ngOnInit(): void {\r\n    this.dataSource = new MatTableDataSource<Element>(ELEMENT_DATA);\r\n    this.customExporter = new CustomExporter(); // YOU CAN BENEFIT FROM DI TOO.\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n}\r\n\r\nexport interface Element {\r\n  name: string;\r\n  position: number;\r\n  surname: string;\r\n  birth: string;\r\n}\r\n\r\nconst ELEMENT_DATA: Element[] = [\r\n  { position: 1, name: 'Albert', surname: 'Einstein', birth: '1879' },\r\n  { position: 2, name: 'Marie', surname: 'Curie', birth: '1867' },\r\n  { position: 3, name: 'Enrico', surname: 'Fermi', birth: '1901' },\r\n  { position: 4, name: 'Dmitri', surname: 'Mendeleev', birth: '1834' },\r\n  { position: 5, name: 'Alfred', surname: 'Nobel', birth: '1833' },\r\n  { position: 6, name: 'Ernest', surname: 'Lawrence', birth: '1901' },\r\n  { position: 7, name: 'Glenn', surname: 'Seaborg', birth: '1912' },\r\n  { position: 8, name: 'Niels', surname: 'Bohr', birth: '1885' },\r\n  { position: 9, name: 'Lise', surname: 'Meitner', birth: '1878' },\r\n  { position: 10, name: 'Wilhelm', surname: 'RÃ¶ntgen', birth: '1845' },\r\n  { position: 11, name: 'Nicolaus', surname: 'Copernicus', birth: '1473' },\r\n  { position: 12, name: 'Georgy', surname: 'Flyorov', birth: '1913' },\r\n  { position: 13, name: 'Yuri', surname: 'Oganessian', birth: '1933' },\r\n  { position: 14, name: 'Johan', surname: 'Gadolin', birth: '1760' },\r\n  { position: 15, name: 'Pierre', surname: 'Curie', birth: '1859' },\r\n];\r\n","<p>Demonstrates how to handle filtering for specific properties of table items.</p>\r\n<p>In this example the table lists space-crafts. A space-craft has a captain. A captain has some properties.\r\n  Filtering for captain's name is done with an exact match. The rest of the properties are filtered with ANYWHERE filter type.\r\n</p>\r\n\r\n<!-- Filtering properties for captain.name are set to be an exact match by using propertyOptions binding-->\r\n<mat-table matTableFilter [exampleEntity]=\"filterEntity\" [propertyOptions]=\"propertyOptions\"\r\n[filterType]=\"filterType\" [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n  <ng-container matColumnDef=\"name\">\r\n    <mat-header-cell *matHeaderCellDef>\r\n      <mat-form-field appearance=\"outline\">\r\n        <input matInput placeholder=\"Name\" [(ngModel)]=\"filterEntity.name\">\r\n      </mat-form-field>\r\n    </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"captainName\">\r\n    <mat-header-cell *matHeaderCellDef>\r\n      <mat-form-field appearance=\"outline\">\r\n        <input matInput placeholder=\"Captain Name\" [(ngModel)]=\"filterEntity.captain.name\">\r\n      </mat-form-field>\r\n    </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.captain.name}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"captainSurname\">\r\n    <mat-header-cell *matHeaderCellDef>\r\n      <mat-form-field appearance=\"outline\">\r\n        <input matInput placeholder=\"Captain Surname\" [(ngModel)]=\"filterEntity.captain.surname\">\r\n      </mat-form-field>\r\n    </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.captain.surname}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"isConstitutionClass\">\r\n      <mat-header-cell *matHeaderCellDef>\r\n          <mat-slide-toggle\r\n          class=\"constitution-padding\"\r\n          [(ngModel)]=\"filterEntity.isConstitutionClass\">\r\n        Constitution Class\r\n      </mat-slide-toggle>\r\n      </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.isConstitutionClass}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n</mat-table>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AddToShowCase } from '../../add-to-showcase';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatTableFilter, PropertyOptions } from 'mat-table-filter';\r\n\r\nexport class Captain {\r\n  name: string;\r\n  surname: string;\r\n}\r\n\r\nexport class SpaceCraft {\r\n  name: string;\r\n  isConstitutionClass: boolean;\r\n  captain: Captain;\r\n}\r\n\r\nconst SPACECRAFT_DATA: SpaceCraft[] = [\r\n  {name: 'Endurance', isConstitutionClass: false, captain: {name: 'Joseph', surname: 'Cooper'}},\r\n  {name: 'Enterprise', isConstitutionClass: true, captain: {name: 'Christopher', surname: 'Pike'}},\r\n  {name: 'Enterprise', isConstitutionClass: true, captain: {name: 'Talha', surname: 'TÃ¼re'}},\r\n  {name: 'Discovery', isConstitutionClass: true, captain: {name: 'Christopher', surname: 'Pike'}},\r\n  {name: 'Enterprise', isConstitutionClass: false, captain: {name: 'Jean-Luc', surname: 'Pickard'}}\r\n];\r\n\r\n@Component({\r\n  selector: 'app-property-options',\r\n  templateUrl: './property-options.component.html',\r\n  styleUrls: ['./property-options.component.css']\r\n})\r\n@AddToShowCase('filter', 'property-options.component', 'Changing Property Options')\r\nexport class PropertyOptionsComponent implements OnInit {\r\n  filterEntity: SpaceCraft;\r\n  filterType: MatTableFilter;\r\n\r\n  propertyOptions: PropertyOptions;\r\n\r\n  displayedColumns: string[] = ['name', 'captainName', 'captainSurname', 'isConstitutionClass'];\r\n  dataSource;\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Do not forget to initialize your object and it's non-primitive properties\r\n    this.filterEntity = new SpaceCraft();\r\n    this.filterEntity.captain = new Captain();\r\n    this.filterEntity.isConstitutionClass = false; // leaving a filter property undefined means you want all the data without filtering\r\n    this.dataSource = new MatTableDataSource(SPACECRAFT_DATA);\r\n\r\n    // captain.name property filtering needs an exact match with case sensitiveness\r\n    // All other properties will be filtered with ANYWHERE search\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.propertyOptions = {'captain.name': {filterType: MatTableFilter.EQUALS, caseSensitive: true}};\r\n  }\r\n}\r\n","<p>Demonstrates how to export selected rows. Having no row selected means to export all.</p>\r\n\r\n<div class=\"example-container mat-elevation-z8\">\r\n  <mat-table matTableExporter [dataSource]=\"dataSource\" #exporter=\"matTableExporter\" [hiddenColumns]=\"[0]\">\r\n\r\n  <!-- Checkbox Column -->\r\n  <ng-container matColumnDef=\"select\">\r\n    <th mat-header-cell *matHeaderCellDef>\r\n      Select\r\n    </th>\r\n    <td mat-cell *matCellDef=\"let row; let i = index\">\r\n      <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                    (change)=\"$event ? toggleRow(row, i) : null\"\r\n                    [checked]=\"selection.isSelected(row)\"\r\n                    [aria-label]=\"checkboxLabel(row)\">\r\n      </mat-checkbox>\r\n    </td>\r\n  </ng-container>\r\n\r\n    <ng-container matColumnDef=\"position\">\r\n      <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"surname\">\r\n      <mat-header-cell *matHeaderCellDef> Surname </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.surname}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"birth\">\r\n      <mat-header-cell *matHeaderCellDef> Birth </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.birth}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n  </mat-table>\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n<div>\r\n  <button mat-raised-button (click)=\"exporter.exportTable('xlsx', {sheet: 'sheet_name', Props: {Author: 'Talha'}, columnWidths: [50, 5, 3]})\">Excel</button>\r\n  <button mat-raised-button (click)=\"exporter.exportTable('csv')\">Csv</button>\r\n  <button mat-raised-button (click)=\"exporter.exportTable('json')\">Json</button>\r\n  <button mat-raised-button (click)=\"exporter.exportTable('txt')\">Txt</button>\r\n</div>\r\n","import { SelectionModel } from '@angular/cdk/collections';\r\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AddToShowCase } from '../../add-to-showcase';\r\nimport { MatTableExporterDirective } from 'mat-table-exporter';\r\n\r\n@Component({\r\n  selector: 'app-selection-exporter',\r\n  templateUrl: './selection-exporter.component.html',\r\n  styleUrls: ['./selection-exporter.component.css']\r\n})\r\n@AddToShowCase('exporter', 'selection-exporter.component', 'Selected Row Exporting Example')\r\nexport class SelectionExporterComponent implements AfterViewInit, OnInit {\r\n  title = 'mte-test';\r\n  displayedColumns = ['select', 'position', 'name', 'surname', 'birth'];\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatTableExporterDirective, { static: false }) exporter: MatTableExporterDirective;\r\n  dataSource: MatTableDataSource<Element>;\r\n  selection = new SelectionModel<Element>(true, []);\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new MatTableDataSource<Element>(ELEMENT_DATA);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  private isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  toggleRow(row: any, index: number) {\r\n    this.selection.toggle(row);\r\n    this.exporter.toggleRow(index);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: Element): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\r\n  }\r\n}\r\n\r\nexport interface Element {\r\n  name: string;\r\n  position: number;\r\n  surname: string;\r\n  birth: string;\r\n}\r\n\r\nconst ELEMENT_DATA: Element[] = [\r\n  { position: 1, name: 'Albert', surname: 'Einstein', birth: '1879' },\r\n  { position: 2, name: 'Marie', surname: 'Curie', birth: '1867' },\r\n  { position: 3, name: 'Enrico', surname: 'Fermi', birth: '1901' },\r\n  { position: 4, name: 'Dmitri', surname: 'Mendeleev', birth: '1834' },\r\n  { position: 5, name: 'Alfred', surname: 'Nobel', birth: '1833' },\r\n  { position: 6, name: 'Ernest', surname: 'Lawrence', birth: '1901' },\r\n  { position: 7, name: 'Glenn', surname: 'Seaborg', birth: '1912' },\r\n  { position: 8, name: 'Niels', surname: 'Bohr', birth: '1885' },\r\n  { position: 9, name: 'Lise', surname: 'Meitner', birth: '1878' },\r\n  { position: 10, name: 'Wilhelm', surname: 'RÃ¶ntgen', birth: '1845' },\r\n  { position: 11, name: 'Nicolaus', surname: 'Copernicus', birth: '1473' },\r\n  { position: 12, name: 'Georgy', surname: 'Flyorov', birth: '1913' },\r\n  { position: 13, name: 'Yuri', surname: 'Oganessian', birth: '1933' },\r\n  { position: 14, name: 'Johan', surname: 'Gadolin', birth: '1760' },\r\n  { position: 15, name: 'Pierre', surname: 'Curie', birth: '1859' },\r\n];\r\n\r\n","<p>Briefly demonstrates the basic usage of mat-table-filter.</p>\r\n<mat-table matTableFilter [exampleEntity]=\"filterEntity\"\r\n[filterType]=\"filterType\" [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n  <ng-container matColumnDef=\"name\">\r\n    <mat-header-cell *matHeaderCellDef>\r\n      <mat-form-field appearance=\"outline\">\r\n        <input matInput placeholder=\"Name\" [(ngModel)]=\"filterEntity.name\">\r\n      </mat-form-field>\r\n    </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"captainName\">\r\n    <mat-header-cell *matHeaderCellDef>\r\n      <mat-form-field appearance=\"outline\">\r\n        <input matInput placeholder=\"Captain Name\" [(ngModel)]=\"filterEntity.captain.name\">\r\n      </mat-form-field>\r\n    </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.captain.name}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"captainSurname\">\r\n    <mat-header-cell *matHeaderCellDef>\r\n      <mat-form-field appearance=\"outline\">\r\n        <input matInput placeholder=\"Captain Surname\" [(ngModel)]=\"filterEntity.captain.surname\">\r\n      </mat-form-field>\r\n    </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.captain.surname}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"isConstitutionClass\">\r\n      <mat-header-cell *matHeaderCellDef>\r\n          <mat-slide-toggle\r\n          class=\"constitution-padding\"\r\n          [(ngModel)]=\"filterEntity.isConstitutionClass\">\r\n        Constitution Class\r\n      </mat-slide-toggle>\r\n      </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.isConstitutionClass}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n</mat-table>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AddToShowCase } from '../../add-to-showcase';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\n\r\nexport class Captain {\r\n  name: string;\r\n  surname: string;\r\n}\r\n\r\nexport class SpaceCraft {\r\n  name: string;\r\n  isConstitutionClass: boolean;\r\n  captain: Captain;\r\n}\r\n\r\nconst SPACECRAFT_DATA: SpaceCraft[] = [\r\n  {name: 'Endurance', isConstitutionClass: false, captain: {name: 'Joseph', surname: 'Cooper'}},\r\n  {name: 'Enterprise', isConstitutionClass: true, captain: {name: 'Christopher', surname: 'Pike'}},\r\n  {name: 'Enterprise', isConstitutionClass: true, captain: {name: 'Talha', surname: 'TÃ¼re'}},\r\n  {name: 'Discovery', isConstitutionClass: true, captain: {name: 'Christopher', surname: 'Pike'}},\r\n  {name: 'Enterprise', isConstitutionClass: false, captain: {name: 'Jean-Luc', surname: 'Pickard'}}\r\n];\r\n\r\n@Component({\r\n  selector: 'app-simple-filter',\r\n  templateUrl: './simple-filter.component.html',\r\n  styleUrls: ['./simple-filter.component.css']\r\n})\r\n@AddToShowCase('filter', 'simple-filter.component', 'Simple Filter')\r\nexport class SimpleFilterComponent implements OnInit {\r\n  filterEntity: SpaceCraft;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['name', 'captainName', 'captainSurname', 'isConstitutionClass'];\r\n  dataSource;\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Do not forget to initialize your object and it's non-primitive properties\r\n    this.filterEntity = new SpaceCraft();\r\n    this.filterEntity.captain = new Captain();\r\n    this.filterEntity.isConstitutionClass = false; // leaving a filter property undefined means you want all the data without filtering\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.dataSource = new MatTableDataSource(SPACECRAFT_DATA);\r\n  }\r\n}\r\n","<div class=\"docs-page\">\r\n<mat-tab-group mat-align-tabs=\"start\">\r\n  <mat-tab label=\"Overview\">\r\n    <markdown ngPreserveWhitespaces [src]=\"'assets/md-files/exporter/README.md'\"></markdown>\r\n  </mat-tab>\r\n  <mat-tab label=\"API\">\r\n    <markdown ngPreserveWhitespaces [src]=\"'assets/md-files/exporter/API.md'\"></markdown>\r\n  </mat-tab>\r\n  <mat-tab label=\"Examples\">\r\n    <app-example-viewer *ngFor=\"let example of examples\" [exampleType]=\"example\"></app-example-viewer>\r\n  </mat-tab>\r\n</mat-tab-group>\r\n</div>\r\n","\r\nimport { BaseComponent } from './../base-component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { showCaseExamples } from '../add-to-showcase';\r\n\r\n@Component({\r\n  selector: 'app-exporter',\r\n  templateUrl: './exporter.component.html',\r\n  styleUrls: ['./exporter.component.css']\r\n})\r\nexport class ExporterComponent extends BaseComponent implements OnInit {\r\n\r\n  ngOnInit() {\r\n    this.examples = showCaseExamples.get('exporter');\r\n  }\r\n\r\n}\r\n","<div class=\"docs-page\">\r\n  <mat-tab-group mat-align-tabs=\"start\">\r\n    <mat-tab label=\"Overview\">\r\n      <markdown ngPreserveWhitespaces [src]=\"'assets/md-files/filter/README.md'\"></markdown>\r\n    </mat-tab>\r\n    <mat-tab label=\"API\">\r\n      <markdown ngPreserveWhitespaces [src]=\"'assets/md-files/filter/API.md'\"></markdown>\r\n    </mat-tab>\r\n    <mat-tab label=\"Examples\">\r\n      <app-example-viewer *ngFor=\"let example of examples\" [exampleType]=\"example\"></app-example-viewer>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n  </div>\r\n","import { showCaseExamples } from './../add-to-showcase';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { BaseComponent } from '../base-component';\r\n\r\n@Component({\r\n  selector: 'app-filter',\r\n  templateUrl: './filter.component.html',\r\n  styleUrls: ['./filter.component.css']\r\n})\r\nexport class FilterComponent extends BaseComponent implements OnInit {\r\n\r\n  ngOnInit() {\r\n    this.examples = showCaseExamples.get('filter');\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}