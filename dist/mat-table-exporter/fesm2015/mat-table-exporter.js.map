{"version":3,"file":"mat-table-exporter.js","sources":["ng://mat-table-exporter/lib/mat-table-exporter.directive.ts","ng://mat-table-exporter/lib/mat-table-exporter.module.ts","ng://mat-table-exporter/public-api.ts","ng://mat-table-exporter/mat-table-exporter.ts"],"sourcesContent":["import { AfterViewInit, Directive, Host, Renderer2, Self, Optional, ViewContainerRef } from '@angular/core';\nimport { CdkTableExporterDirective, DataExtractorService, ServiceLocatorService } from 'cdk-table-exporter';\nimport { Observable } from 'rxjs';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\n\n@Directive({\n  selector: '[matTableExporter]', // renamed selector but kept old version for backwards compat.\n  exportAs: 'matTableExporter'\n})\nexport class MatTableExporterDirective extends CdkTableExporterDirective implements AfterViewInit {\n  /**\n   * Overriding ngAfterViewInit of TableExporter\n   */\n  ngAfterViewInit(): void {\n    this.exportStarted.subscribe(_ => {\n      this.enablePaginator(false);\n    });\n    this.exportCompleted.subscribe(_ => {\n      this.enablePaginator(true);\n    });\n  }\n\n  constructor(\n    renderer: Renderer2,\n    serviceLocator: ServiceLocatorService,\n    dataExtractor: DataExtractorService,\n    @Host() @Self() @Optional() table: MatTable<any>,\n    viewContainerRef: ViewContainerRef\n  ) {\n    super(renderer, serviceLocator, dataExtractor, table, viewContainerRef);\n  }\n\n  /**\n   * MatTable implementation of getPageCount\n   */\n  public getPageCount(): number {\n    return this.getPaginator().getNumberOfPages();\n  }\n\n  /**\n   * MatTable implementation of getCurrentPageIndex\n   */\n  public getCurrentPageIndex(): number {\n    return this.getPaginator().pageIndex;\n  }\n\n  /**\n   * MatTable implementation of goToPage\n   */\n  public goToPage(index: number): void {\n    this.getPaginator().pageIndex = index;\n    this.getPaginator()._changePageSize(this.getPaginator().pageSize);\n  }\n\n  /**\n   * MatTable implementation of getPageChangeObservable\n   */\n  public getPageChangeObservable(): Observable<any> {\n    return this.getPaginator().page;\n  }\n\n\n  private getPaginator(): MatPaginator {\n    return (this.cdkTable.dataSource as MatTableDataSource<any>).paginator;\n  }\n\n  private enablePaginator(value: boolean) {\n    if (this.getPaginator()) {\n      this.getPaginator().disabled = !value;\n      this.getPaginator()._changePageSize(this.getPaginator().pageSize);\n    }\n  }\n\n}\n","import { CdkTableExporterModule } from 'cdk-table-exporter';\nimport { MatTableModule } from '@angular/material/table';\nimport { NgModule } from '@angular/core';\nimport { MatTableExporterDirective } from './mat-table-exporter.directive';\n\n\n@NgModule({\n  declarations: [MatTableExporterDirective],\n  imports: [\n    MatTableModule,\n    CdkTableExporterModule\n  ],\n  exports: [MatTableExporterDirective]\n})\nexport class MatTableExporterModule { }\n","\n/*\n * Public API Surface of mat-table-exporter\n */\n\nexport * from './lib/mat-table-exporter.module';\nexport { MatTableExporterDirective } from './lib/mat-table-exporter.directive';\nexport * from 'cdk-table-exporter';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;MAUa,yBAA0B,SAAQ,yBAAyB;IAatE,YACE,QAAmB,EACnB,cAAqC,EACrC,aAAmC,EACP,KAAoB,EAChD,gBAAkC;QAElC,KAAK,CAAC,QAAQ,EAAE,cAAc,EAAE,aAAa,EAAE,KAAK,EAAE,gBAAgB,CAAC,CAAC;KACzE;;;;IAjBD,eAAe;QACb,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAC5B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC7B,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;YAC9B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SAC5B,CAAC,CAAC;KACJ;;;;IAeM,YAAY;QACjB,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,gBAAgB,EAAE,CAAC;KAC/C;;;;IAKM,mBAAmB;QACxB,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC;KACtC;;;;IAKM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS,GAAG,KAAK,CAAC;QACtC,IAAI,CAAC,YAAY,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,CAAC;KACnE;;;;IAKM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC;KACjC;IAGO,YAAY;QAClB,OAAQ,IAAI,CAAC,QAAQ,CAAC,UAAsC,CAAC,SAAS,CAAC;KACxE;IAEO,eAAe,CAAC,KAAc;QACpC,IAAI,IAAI,CAAC,YAAY,EAAE,EAAE;YACvB,IAAI,CAAC,YAAY,EAAE,CAAC,QAAQ,GAAG,CAAC,KAAK,CAAC;YACtC,IAAI,CAAC,YAAY,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,CAAC;SACnE;KACF;;kGA9DU,yBAAyB;2DAAzB,yBAAyB;+CAAzB,yBAAyB;cAJrC,SAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,QAAQ,EAAE,kBAAkB;aAC7B;;sBAkBI,IAAI;;sBAAI,IAAI;;sBAAI,QAAQ;;;MCbhB,sBAAsB;;uDAAtB,sBAAsB;wHAAtB,sBAAsB,kBANxB;YACP,cAAc;YACd,sBAAsB;SACvB;qFAGU,sBAAsB,mBAPlB,yBAAyB,aAEtC,cAAc;QACd,sBAAsB,aAEd,yBAAyB;+CAExB,sBAAsB;cARlC,QAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,yBAAyB,CAAC;gBACzC,OAAO,EAAE;oBACP,cAAc;oBACd,sBAAsB;iBACvB;gBACD,OAAO,EAAE,CAAC,yBAAyB,CAAC;aACrC;;;ACZD;;GAEG;;ACHH;;GAEG;;;;"}