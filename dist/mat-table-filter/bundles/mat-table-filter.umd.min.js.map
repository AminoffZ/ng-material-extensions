{"version":3,"sources":["ng://mat-table-filter/lib/mat-table-filter.enum.ts","node_modules/tslib/tslib.es6.js","ng://mat-table-filter/lib/services/filter-predicate.ts","ng://mat-table-filter/lib/services/array-predicate.service.ts","ng://mat-table-filter/lib/services/alpha-numeric-predicate.service.ts","ng://mat-table-filter/lib/services/mat-table-filter.service.ts","ng://mat-table-filter/lib/mat-table-filter.directive.ts","ng://mat-table-filter/lib/mat-table-filter.module.ts"],"names":["EQUALS","ANYWHERE","STARTS_WITH","ENDS_WITH","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","FilterPredicate","executeCondition","itemPair","options","handleLetterCasing","caseSensitive","filterType","MatTableFilter","equals","anywhere","startsWith","endsWith","transformAllLowerCase","object","key","value","LODASH.isString","toLowerCase","ArrayPredicateService","_super","call","tslib_1.__extends","warn","console","UNSUPPORTED_OPERATION_WARNING","SUGGESTION_WARNING","LODASH.isEqual","example","sort","item","isSubset","LODASH.difference","LODASH.flatten","length","Injectable","args","providedIn","AlphaNumericPredicateService","includes","MatTableFilterService","_alphaNumericService","_arrayService","filterPredicate","propertyOptions","commonOptions","propertyName","exampleKeys","keys","exampleKeys_1","__values","o","m","Symbol","iterator","i","next","done","tslib_1.__values","exampleKeys_1_1","exampleValue","LODASH.cloneDeep","LODASH.isNil","LODASH.every","LODASH.isEmpty","itemValue","nextPropertyName","getNextPropertyName","finalizeOptionsForProperty","isFunction","columnOptions","isAlphaNumeric","valuePair","toString","LODASH.isArray","LODASH.isBoolean","isChanged","oldEntity","newEntity","toPlainJson","JSON","parse","stringify","undefined","LODASH.isNumber","MatTableFilterDirective","_filterService","_injectedTable","_viewContainerRef","debounceTime","initCdkTable","initDebounceSubject","ngDoCheck","_oldExampleEntity","exampleEntity","_exampleEntitySubject","table","componentView","component","_table","Error","_this","BehaviorSubject","pipe","subscribe","_","updateFilterPredicate","matDataSource","getMatDataSource","getFilterPredicate","filter","customPredicate","Directive","selector","exportAs","MatTable","decorators","type","Host","Self","Optional","ViewContainerRef","Input","MatTableFilterModule","NgModule","declarations","imports","MatTableModule","exports"],"mappings":"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","sourcesContent":["export enum MatTableFilter {\n  EQUALS = 'EQUALS',\n  ANYWHERE = 'ANYWHERE',\n  STARTS_WITH = 'STARTS_WITH',\n  ENDS_WITH = 'ENDS_WITH'\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { MatTableFilter } from '../mat-table-filter.enum';\r\nimport { ItemPair } from '../item-pair';\r\nimport * as LODASH from 'lodash';\r\nimport { Options } from '../options';\r\n\r\nexport abstract class FilterPredicate<T> {\r\n\r\n  public abstract equals(itemPair: ItemPair<T>): boolean;\r\n  public abstract anywhere(itemPair: ItemPair<T>): boolean;\r\n  public abstract startsWith(itemPair: ItemPair<T>): boolean;\r\n  public abstract endsWith(itemPair: ItemPair<T>): boolean;\r\n\r\n  public executeCondition(itemPair: ItemPair<T>, options: Options): boolean {\r\n    this.handleLetterCasing(itemPair, options.caseSensitive);\r\n    switch (options.filterType) {\r\n      case MatTableFilter.EQUALS:\r\n        return this.equals(itemPair);\r\n      case MatTableFilter.ANYWHERE:\r\n        return this.anywhere(itemPair);\r\n      case MatTableFilter.STARTS_WITH:\r\n        return this.startsWith(itemPair);\r\n      case MatTableFilter.ENDS_WITH:\r\n        return this.endsWith(itemPair);\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n\r\n  private handleLetterCasing(itemPair: ItemPair<any>, caseSensitive: boolean): void {\r\n    if (!caseSensitive) {\r\n      this.transformAllLowerCase(itemPair);\r\n    }\r\n  }\r\n\r\n  private transformAllLowerCase(object: any) {\r\n    // tslint:disable-next-line:forin\r\n    for (const key in object) {\r\n      const value = object[key];\r\n      if (LODASH.isString(value)) {\r\n        object[key] = value.toLowerCase();\r\n      } else {\r\n        this.transformAllLowerCase(value);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { FilterPredicate } from './filter-predicate';\nimport * as LODASH from 'lodash';\nimport { ItemPair } from '../item-pair';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArrayPredicateService extends FilterPredicate<Array<any>> {\n\n  // tslint:disable-next-line:max-line-length\n  private static readonly UNSUPPORTED_OPERATION_WARNING = 'This filterType is unsupported for array filtering. FilterType.ANYWHERE is executed instead!';\n  private static readonly SUGGESTION_WARNING = 'You can set a custom predicate for the array property through PropertyOptions!';\n  constructor() {\n    super();\n  }\n\n  private static warn() {\n    console.warn(ArrayPredicateService.UNSUPPORTED_OPERATION_WARNING);\n    console.warn(ArrayPredicateService.SUGGESTION_WARNING);\n  }\n\n  public equals(itemPair: ItemPair<Array<any>>): boolean {\n    return LODASH.isEqual(itemPair.example.sort(), itemPair.item.sort());\n  }\n  public anywhere(itemPair: ItemPair<Array<any>>): boolean {\n    return this.isSubset(itemPair.example, itemPair.item);\n  }\n  public startsWith(itemPair: ItemPair<Array<any>>): boolean {\n    ArrayPredicateService.warn();\n    return this.anywhere(itemPair);\n  }\n  public endsWith(itemPair: ItemPair<Array<any>>): boolean {\n    ArrayPredicateService.warn();\n    return this.anywhere(itemPair);\n  }\n\n  private isSubset(example: Array<any>, item: Array<any>): boolean {\n    return !LODASH.difference(LODASH.flatten(example), LODASH.flatten(item)).length;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { FilterPredicate } from './filter-predicate';\nimport { ItemPair } from '../item-pair';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlphaNumericPredicateService extends FilterPredicate<string> {\n\n  constructor() {\n    super();\n   }\n\n  public equals(itemPair: ItemPair<string>): boolean {\n    return itemPair.example === itemPair.item;\n  }\n  public anywhere(itemPair: ItemPair<string>): boolean {\n    return itemPair.item.includes(itemPair.example);\n  }\n  public startsWith(itemPair: ItemPair<string>): boolean {\n    return itemPair.item.startsWith(itemPair.example);\n  }\n  public endsWith(itemPair: ItemPair<string>): boolean {\n    return itemPair.item.endsWith(itemPair.example);\n  }\n\n}\n","import { PropertyOptions, PredicateFunc } from '../property-options';\nimport { ItemPair } from './../item-pair';\nimport { ArrayPredicateService } from './array-predicate.service';\nimport { AlphaNumericPredicateService } from './alpha-numeric-predicate.service';\nimport { Injectable } from '@angular/core';\nimport * as LODASH from 'lodash';\nimport { Options } from '../options';\nimport { isFunction } from 'util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatTableFilterService {\n  constructor(private _alphaNumericService: AlphaNumericPredicateService, private _arrayService: ArrayPredicateService) {}\n\n  public filterPredicate(itemPair: ItemPair<any>, propertyOptions: PropertyOptions,\n                         commonOptions: Options | PredicateFunc, propertyName?: string): boolean {\n    // tslint:disable-next-line:forin\n    const exampleKeys = Object.keys(itemPair.example);\n    for (const key of exampleKeys) {\n      const exampleValue = LODASH.cloneDeep(itemPair.example[key]);\n      if (LODASH.isNil(exampleValue) || LODASH.every(exampleValue, LODASH.isEmpty) && typeof exampleValue !== 'boolean') {\n        // if example entity's property is undefined/null/empty then it means the caller wants all the data\n        continue;\n      }\n      if (itemPair.item.hasOwnProperty(key)) {\n        // if example entity has additional columns then search fails\n        const itemValue = LODASH.cloneDeep(itemPair.item[key]);\n        const nextPropertyName = this.getNextPropertyName(propertyName, key);\n        const options = this.finalizeOptionsForProperty(commonOptions, propertyOptions, nextPropertyName);\n        if (isFunction(options)) { // if user defined predicate is present for property\n          const customPredicate = options as PredicateFunc;\n          if (!customPredicate(itemValue)) {\n            return false;\n          }\n        } else {\n          const columnOptions = options as Options;\n          if (this.isAlphaNumeric(itemValue)) {\n            const valuePair: ItemPair<string> = {item: itemValue.toString(), example: exampleValue};\n            if (!this._alphaNumericService.executeCondition(valuePair, columnOptions)) {\n              return false;\n            }\n          } else if (LODASH.isArray(itemValue)) {\n            const valuePair: ItemPair<any[]> = {item: itemValue, example: exampleValue};\n            if (!this._arrayService.executeCondition(valuePair, columnOptions)) {\n              return false;\n            }\n          } else if (LODASH.isBoolean(itemValue)) {\n            if (itemValue !== exampleValue) {\n              return false;\n            }\n          } else {\n            const valuePair: ItemPair<any> = {item: itemValue, example: exampleValue};\n            if (!this.filterPredicate(valuePair, propertyOptions, options, nextPropertyName)) {\n              // if one of the inner properties returns true, this shouldnt affect the whole item's filtering\n              // however if it returns false then the item must not be in the list\n              return false;\n            }\n          }\n        }\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private finalizeOptionsForProperty(commonOptions: Options | PredicateFunc, propertyOptions: PropertyOptions, propertyName: string):\n   Options | PredicateFunc {\n    if (propertyOptions && propertyOptions.hasOwnProperty(propertyName)) {\n      return propertyOptions[propertyName];\n    } else {\n      return commonOptions;\n    }\n  }\n\n  private getNextPropertyName(propertyName: string, key: string): string {\n    return propertyName ? (propertyName + '.' + key) : key;\n  }\n\n  public isChanged(oldEntity: any, newEntity: any): boolean {\n    return !LODASH.isEqual(this.toPlainJson(oldEntity), this.toPlainJson(newEntity));\n  }\n\n  public toPlainJson(object: any): JSON {\n    if (object) {\n      return JSON.parse(JSON.stringify(object));\n    } else {\n      return undefined;\n    }\n  }\n\n  private isAlphaNumeric(value: any): boolean {\n    return LODASH.isString(value) || LODASH.isNumber(value);\n  }\n}\n","import { PropertyOptions } from './property-options';\r\nimport { Directive, DoCheck, Input, ViewContainerRef, Host, Self, Optional } from '@angular/core';\r\nimport { MatTable, MatTableDataSource } from '@angular/material';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { MatTableFilter } from './mat-table-filter.enum';\r\nimport { MatTableFilterService } from './services/mat-table-filter.service';\r\n\r\n@Directive({\r\n  selector: '[matTableFilter]',\r\n  exportAs: 'matTableFilter'\r\n})\r\nexport class MatTableFilterDirective implements DoCheck {\r\n\r\n  private _oldExampleEntity: any;\r\n\r\n  @Input() exampleEntity: any;\r\n\r\n  /**\r\n   * in millis\r\n   */\r\n  private _table: any;\r\n  @Input() debounceTime = 400;\r\n  @Input() filterType: MatTableFilter = MatTableFilter.ANYWHERE;\r\n  @Input() caseSensitive = false;\r\n  @Input() customPredicate: (data: any) => boolean;\r\n  @Input() propertyOptions: PropertyOptions;\r\n  private _exampleEntitySubject: BehaviorSubject<void>;\r\n\r\n\r\n  constructor(private _filterService: MatTableFilterService,\r\n              @Host() @Self() @Optional() private _injectedTable: MatTable<any>,\r\n              private _viewContainerRef: ViewContainerRef) {\r\n              this.initCdkTable();\r\n              this.initDebounceSubject();\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    if (this._filterService.isChanged(this._oldExampleEntity, this.exampleEntity)) {\r\n      this._oldExampleEntity = this._filterService.toPlainJson(this.exampleEntity);\r\n      this._exampleEntitySubject.next(undefined);\r\n    }\r\n  }\r\n\r\n\r\n  private initCdkTable() {\r\n    // tslint:disable-next-line:no-string-literal\r\n    const table = this._viewContainerRef['_data'].componentView.component;\r\n    if (table) {\r\n      this._table = table;\r\n    } else if (this._injectedTable) {\r\n      this._table = this._injectedTable;\r\n    } else {\r\n      throw new Error('Unsupported Angular version!');\r\n    }\r\n  }\r\n\r\n  private initDebounceSubject() {\r\n    this._exampleEntitySubject = new BehaviorSubject<void>(null);\r\n    this._exampleEntitySubject.pipe(\r\n     debounceTime(this.debounceTime))\r\n     .subscribe(_ => {\r\n       this.updateFilterPredicate();\r\n     });\r\n  }\r\n\r\n  private updateFilterPredicate() {\r\n    const matDataSource = this.getMatDataSource();\r\n    if (matDataSource) {\r\n      matDataSource.filterPredicate = this.getFilterPredicate();\r\n      matDataSource.filter = this.exampleEntity as any;\r\n    }\r\n  }\r\n\r\n  private getFilterPredicate() {\r\n    if (this.customPredicate) {\r\n      return this.customPredicate;\r\n    } else {\r\n      return (item: any): boolean => {\r\n        return this._filterService.filterPredicate({example: this.exampleEntity, item}, this.propertyOptions,\r\n         {filterType: this.filterType, caseSensitive: this.caseSensitive});\r\n      };\r\n    }\r\n  }\r\n\r\n  private getMatDataSource(): MatTableDataSource<any> {\r\n    const matTable = this._table as MatTable<any>;\r\n    return (matTable.dataSource as MatTableDataSource<any>);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { MatTableModule } from '@angular/material';\nimport { MatTableFilterDirective } from './mat-table-filter.directive';\n\n@NgModule({\n  declarations: [MatTableFilterDirective],\n  imports: [\n    MatTableModule\n  ],\n  exports: [MatTableFilterDirective]\n})\nexport class MatTableFilterModule { }\n"]}