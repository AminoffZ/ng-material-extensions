{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://mat-table-filter/lib/mat-table-filter.enum.ts","ng://mat-table-filter/lib/services/filter-predicate.ts","ng://mat-table-filter/lib/services/array-predicate.service.ts","ng://mat-table-filter/lib/services/alpha-numeric-predicate.service.ts","ng://mat-table-filter/lib/services/mat-table-filter.service.ts","ng://mat-table-filter/lib/mat-table-filter.directive.ts","ng://mat-table-filter/lib/mat-table-filter.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","MatTableFilter","__values","o","m","Symbol","iterator","i","call","next","length","value","done","FilterPredicate","executeCondition","itemPair","options","handleLetterCasing","caseSensitive","filterType","EQUALS","equals","ANYWHERE","anywhere","STARTS_WITH","startsWith","ENDS_WITH","endsWith","transformAllLowerCase","object","key","LODASH.isString","toLowerCase","ArrayPredicateService","_super","warn","console","UNSUPPORTED_OPERATION_WARNING","SUGGESTION_WARNING","LODASH.isEqual","example","sort","item","isSubset","LODASH.difference","LODASH.flatten","factory","Éµfac","providedIn","AlphaNumericPredicateService","includes","MatTableFilterService","_alphaNumericService","_arrayService","filterPredicate","propertyOptions","commonOptions","propertyName","exampleKeys","keys","exampleKeys_1","exampleKeys_1_1","exampleValue","LODASH.cloneDeep","LODASH.isNil","LODASH.every","LODASH.isEmpty","itemValue","nextPropertyName","getNextPropertyName","finalizeOptionsForProperty","isFunction","columnOptions","isAlphaNumeric","valuePair","toString","LODASH.isArray","LODASH.isBoolean","isChanged","oldEntity","newEntity","toPlainJson","JSON","parse","stringify","LODASH.isNumber","core","MatTableFilterDirective","_filterService","_injectedTable","_viewContainerRef","debounceTime","initCdkTable","initDebounceSubject","ngDoCheck","_oldExampleEntity","exampleEntity","_exampleEntitySubject","undefined","table","_b","_a","componentView","component","_table","Error","_this","BehaviorSubject","pipe","subscribe","_","updateFilterPredicate","matDataSource","getMatDataSource","getFilterPredicate","filter","customPredicate","dataSource","MatTable","ViewContainerRef","selectors","inputs","exportAs","MatTableFilterModule","imports","MatTableModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum MatTableFilter {\n  EQUALS = 'EQUALS',\n  ANYWHERE = 'ANYWHERE',\n  STARTS_WITH = 'STARTS_WITH',\n  ENDS_WITH = 'ENDS_WITH'\n}\n","import { MatTableFilter } from '../mat-table-filter.enum';\nimport { ItemPair } from '../item-pair';\nimport * as LODASH from 'lodash';\nimport { Options } from '../options';\n\nexport abstract class FilterPredicate<T> {\n\n  public abstract equals(itemPair: ItemPair<T>): boolean;\n  public abstract anywhere(itemPair: ItemPair<T>): boolean;\n  public abstract startsWith(itemPair: ItemPair<T>): boolean;\n  public abstract endsWith(itemPair: ItemPair<T>): boolean;\n\n  public executeCondition(itemPair: ItemPair<T>, options: Options): boolean {\n    this.handleLetterCasing(itemPair, options.caseSensitive);\n    switch (options.filterType) {\n      case MatTableFilter.EQUALS:\n        return this.equals(itemPair);\n      case MatTableFilter.ANYWHERE:\n        return this.anywhere(itemPair);\n      case MatTableFilter.STARTS_WITH:\n        return this.startsWith(itemPair);\n      case MatTableFilter.ENDS_WITH:\n        return this.endsWith(itemPair);\n      default:\n        return true;\n    }\n  }\n\n  private handleLetterCasing(itemPair: ItemPair<any>, caseSensitive: boolean): void {\n    if (!caseSensitive) {\n      this.transformAllLowerCase(itemPair);\n    }\n  }\n\n  private transformAllLowerCase(object: any) {\n    // tslint:disable-next-line:forin\n    for (const key in object) {\n      const value = object[key];\n      if (LODASH.isString(value)) {\n        object[key] = value.toLowerCase();\n      } else {\n        this.transformAllLowerCase(value);\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FilterPredicate } from './filter-predicate';\nimport * as LODASH from 'lodash';\nimport { ItemPair } from '../item-pair';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArrayPredicateService extends FilterPredicate<Array<any>> {\n\n  // tslint:disable-next-line:max-line-length\n  private static readonly UNSUPPORTED_OPERATION_WARNING = 'This filterType is unsupported for array filtering. FilterType.ANYWHERE is executed instead!';\n  private static readonly SUGGESTION_WARNING = 'You can set a custom predicate for the array property through PropertyOptions!';\n  constructor() {\n    super();\n  }\n\n  private static warn() {\n    console.warn(ArrayPredicateService.UNSUPPORTED_OPERATION_WARNING);\n    console.warn(ArrayPredicateService.SUGGESTION_WARNING);\n  }\n\n  public equals(itemPair: ItemPair<Array<any>>): boolean {\n    return LODASH.isEqual(itemPair.example.sort(), itemPair.item.sort());\n  }\n  public anywhere(itemPair: ItemPair<Array<any>>): boolean {\n    return this.isSubset(itemPair.example, itemPair.item);\n  }\n  public startsWith(itemPair: ItemPair<Array<any>>): boolean {\n    ArrayPredicateService.warn();\n    return this.anywhere(itemPair);\n  }\n  public endsWith(itemPair: ItemPair<Array<any>>): boolean {\n    ArrayPredicateService.warn();\n    return this.anywhere(itemPair);\n  }\n\n  private isSubset(example: Array<any>, item: Array<any>): boolean {\n    return !LODASH.difference(LODASH.flatten(example), LODASH.flatten(item)).length;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { FilterPredicate } from './filter-predicate';\nimport { ItemPair } from '../item-pair';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlphaNumericPredicateService extends FilterPredicate<string> {\n\n  constructor() {\n    super();\n   }\n\n  public equals(itemPair: ItemPair<string>): boolean {\n    return itemPair.example === itemPair.item;\n  }\n  public anywhere(itemPair: ItemPair<string>): boolean {\n    return itemPair.item.includes(itemPair.example);\n  }\n  public startsWith(itemPair: ItemPair<string>): boolean {\n    return itemPair.item.startsWith(itemPair.example);\n  }\n  public endsWith(itemPair: ItemPair<string>): boolean {\n    return itemPair.item.endsWith(itemPair.example);\n  }\n\n}\n","import { PropertyOptions, PredicateFunc } from '../property-options';\nimport { ItemPair } from './../item-pair';\nimport { ArrayPredicateService } from './array-predicate.service';\nimport { AlphaNumericPredicateService } from './alpha-numeric-predicate.service';\nimport { Injectable } from '@angular/core';\nimport * as LODASH from 'lodash';\nimport { Options } from '../options';\nimport { isFunction } from 'util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatTableFilterService {\n  constructor(private _alphaNumericService: AlphaNumericPredicateService, private _arrayService: ArrayPredicateService) {}\n\n  public filterPredicate(itemPair: ItemPair<any>, propertyOptions: PropertyOptions,\n                         commonOptions: Options | PredicateFunc, propertyName?: string): boolean {\n    // tslint:disable-next-line:forin\n    const exampleKeys = Object.keys(itemPair.example);\n    for (const key of exampleKeys) {\n      const exampleValue = LODASH.cloneDeep(itemPair.example[key]);\n      if (LODASH.isNil(exampleValue) || LODASH.every(exampleValue, LODASH.isEmpty) && typeof exampleValue !== 'boolean') {\n        // if example entity's property is undefined/null/empty then it means the caller wants all the data\n        continue;\n      }\n      if (itemPair.item.hasOwnProperty(key)) {\n        // if example entity has additional columns then search fails\n        const itemValue = LODASH.cloneDeep(itemPair.item[key]);\n        const nextPropertyName = this.getNextPropertyName(propertyName, key);\n        const options = this.finalizeOptionsForProperty(commonOptions, propertyOptions, nextPropertyName);\n        if (isFunction(options)) { // if user defined predicate is present for property\n          const customPredicate = options as PredicateFunc;\n          if (!customPredicate(itemValue)) {\n            return false;\n          }\n        } else {\n          const columnOptions = options as Options;\n          if (this.isAlphaNumeric(itemValue)) {\n            const valuePair: ItemPair<string> = {item: itemValue.toString(), example: exampleValue};\n            if (!this._alphaNumericService.executeCondition(valuePair, columnOptions)) {\n              return false;\n            }\n          } else if (LODASH.isArray(itemValue)) {\n            const valuePair: ItemPair<any[]> = {item: itemValue, example: exampleValue};\n            if (!this._arrayService.executeCondition(valuePair, columnOptions)) {\n              return false;\n            }\n          } else if (LODASH.isBoolean(itemValue)) {\n            if (itemValue !== exampleValue) {\n              return false;\n            }\n          } else {\n            const valuePair: ItemPair<any> = {item: itemValue, example: exampleValue};\n            if (!this.filterPredicate(valuePair, propertyOptions, options, nextPropertyName)) {\n              // if one of the inner properties returns true, this shouldnt affect the whole item's filtering\n              // however if it returns false then the item must not be in the list\n              return false;\n            }\n          }\n        }\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private finalizeOptionsForProperty(commonOptions: Options | PredicateFunc, propertyOptions: PropertyOptions, propertyName: string):\n   Options | PredicateFunc {\n    if (propertyOptions && propertyOptions.hasOwnProperty(propertyName)) {\n      return propertyOptions[propertyName];\n    } else {\n      return commonOptions;\n    }\n  }\n\n  private getNextPropertyName(propertyName: string, key: string): string {\n    return propertyName ? (propertyName + '.' + key) : key;\n  }\n\n  public isChanged(oldEntity: any, newEntity: any): boolean {\n    return !LODASH.isEqual(this.toPlainJson(oldEntity), this.toPlainJson(newEntity));\n  }\n\n  public toPlainJson(object: any): JSON {\n    if (object) {\n      return JSON.parse(JSON.stringify(object));\n    } else {\n      return undefined;\n    }\n  }\n\n  private isAlphaNumeric(value: any): boolean {\n    return LODASH.isString(value) || LODASH.isNumber(value);\n  }\n}\n","import { PropertyOptions } from './property-options';\nimport { Directive, DoCheck, Input, ViewContainerRef, Host, Self, Optional } from '@angular/core';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { MatTableFilter } from './mat-table-filter.enum';\nimport { MatTableFilterService } from './services/mat-table-filter.service';\n\n@Directive({\n  selector: '[matTableFilter]',\n  exportAs: 'matTableFilter'\n})\nexport class MatTableFilterDirective implements DoCheck {\n  private _oldExampleEntity: any;\n\n  @Input() exampleEntity: any;\n\n  /**\n   * in millis\n   */\n  private _table: any;\n  @Input() debounceTime = 400;\n  @Input() filterType: MatTableFilter = MatTableFilter.ANYWHERE;\n  @Input() caseSensitive = false;\n  @Input() customPredicate: (data: any) => boolean;\n  @Input() propertyOptions: PropertyOptions;\n  private _exampleEntitySubject: BehaviorSubject<void>;\n\n\n  constructor(\n    private _filterService: MatTableFilterService,\n    @Host() @Self() @Optional() private _injectedTable: MatTable<any>,\n    private _viewContainerRef: ViewContainerRef\n  ) {\n    this.initCdkTable();\n    this.initDebounceSubject();\n  }\n\n  ngDoCheck(): void {\n    if (this._filterService.isChanged(this._oldExampleEntity, this.exampleEntity)) {\n      this._oldExampleEntity = this._filterService.toPlainJson(this.exampleEntity);\n      this._exampleEntitySubject.next(undefined);\n    }\n  }\n\n\n  private initCdkTable() {\n    // tslint:disable-next-line:no-string-literal\n    const table = this._viewContainerRef['_data']?.componentView?.component;\n\n    if (table) {\n      this._table = table;\n    } else if (this._injectedTable) {\n      this._table = this._injectedTable;\n    } else {\n      throw new Error('Unsupported Angular version!');\n    }\n  }\n\n  private initDebounceSubject() {\n    this._exampleEntitySubject = new BehaviorSubject<void>(null);\n    this._exampleEntitySubject.pipe(\n      debounceTime(this.debounceTime))\n      .subscribe(_ => {\n        this.updateFilterPredicate();\n      });\n  }\n\n  private updateFilterPredicate() {\n    const matDataSource = this.getMatDataSource();\n    if (matDataSource) {\n      matDataSource.filterPredicate = this.getFilterPredicate();\n      matDataSource.filter = this.exampleEntity as any;\n    }\n  }\n\n  private getFilterPredicate() {\n    if (this.customPredicate) {\n      return this.customPredicate;\n    } else {\n      return (item: any): boolean => {\n        return this._filterService.filterPredicate({ example: this.exampleEntity, item }, this.propertyOptions,\n          { filterType: this.filterType, caseSensitive: this.caseSensitive });\n      };\n    }\n  }\n\n  private getMatDataSource(): MatTableDataSource<any> {\n    const matTable = this._table as MatTable<any>;\n    return (matTable.dataSource as MatTableDataSource<any>);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTableFilterDirective } from './mat-table-filter.directive';\n\n@NgModule({\n  declarations: [MatTableFilterDirective],\n  imports: [\n    MatTableModule\n  ],\n  exports: [MatTableFilterDirective]\n})\nexport class MatTableFilterModule { }\n"]}